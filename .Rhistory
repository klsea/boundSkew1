dt$Age <- dt$Age + 19
View(dt)
grep('SC0', colnames(dt))
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
# add id column
dt$ID <- c(0,0,seq(1,209,1))
# clean
dt <- dt[-c(1:2, 144:ncol(dt))]
View(dt)
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
View(dt)
View(dt)c(1:2, 144:ncol(dt)-1)
c(1:2, 144:ncol(dt)-1)
c(1:2, 144:(ncol(dt)-1))
# clean
dt <- dt[-c(1:2, 144:(ncol(dt)-1))]
View(dt)
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
View(dt)
# add id column
dt$ID <- c(0,0,seq(1,209,1))
# clean
dt <- dt[-c(1:2, 144:(ncol(dt)-1))]
View(dt)
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
View(dt)
grep('Q245.1', colnames(dt))
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
# add id column
dt$ID <- c(0,0,seq(1,209,1))
# clean
dt <- dt[-c(1:2, 145:(ncol(dt)-1))]
dt <- dt[c(ncol(dt),1:(ncol(dt)-1))]
View(dt)
# create data dictionary
dd <- t(dt[1,])
dd <- cbind(rownames(dd), data.frame(dd, row.names = NULL))
colnames(dd) <- c('Variable', 'Question')
# finish cleaning
dt <- dt[-c(1:2),]
dt$Age <- as.integer(as.character(dt$Age))
dt$Age <- dt$Age + 19
write.csv(dd, here("data", "bound_skew1_data_dictionary.csv"), row.names = FALSE)
write.csv(dt, here("data", "bound_skew1_data.csv"), row.names = FALSE)
View(dd)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
# add measurement units
dd$`Measurement Units` <- sapply(dt, class)
View(dd)
# Create and populate allowed_values in data dictionary
dd[,'Allowed Values'] <- NA
View(dt)
dd$`Measurement Units`[143] <- 'mm/dd/yyyy'
View(dd)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
rm(a, b, g, x, y, z)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
View(dt)
dd$`Allowed Values`[1] <- '1-209'
View(dd)
range(dt$Age)
View(dd)
dd$`Allowed Values`[3] <- "1 = Male, 2 = Female"
View(dd)
dd$`Allowed Values`[4] <- "1 = Middle School, 2 = High School Diploma, 3 = Some College,
4 = Bachelor's Degree, 5 = Master's Degree, 6 = Doctoral Degree"
# Create and populate description of variable
dd[,'Description of Variable'] <- NA
View(dd)
dd$`Description of Variable`[3] <- "1 = Male, 2 = Female"
dd$`Description of Variable`[4] <- "1 = Middle School, 2 = High School Diploma, 3 = Some College,
4 = Bachelor's Degree, 5 = Master's Degree, 6 = Doctoral Degree"
dd$`Description of Variable`[5] <-"1 = White/Caucasian, 2 = Black/African American, 3 = Asian, 4 = Hispanic/Latino,
5 = American Indian/Alaska Native, 6 = Pacific Islander, 7 = Multiracial, 8 = Other"
range(dt$Health)
range(dt$Income)
View(dd)
dd$`Allowed Values`[8:69] <- '1 or 2'
View(dd)
head(dt$Q241)
range(dt$Q241)
dd$`Description of Variable`[6] <- <- '1 = less than $10,000, 2 = $10,000-$19,999,
3 = $20,000-$29,999, 4 = $30,000-$39,999, 5 = $40,000-$49,999, 6 = $50,000-$59,999, 7 = $60,000-$69,999,
8 = $70,000-$79,999, 9 = $80,000-$89,999, 10 = $90,000-$99,999, 11 = $100,000-$109,999, 12 = $110,000-$119,999,
13 = $120,000-$129,999, 14 = $130,000-$139,999, 15 = $140,000-$149,999, 16 = $150,000 or more'
dd$`Description of Variable`[6] <- '1 = less than $10,000, 2 = $10,000-$19,999,
3 = $20,000-$29,999, 4 = $30,000-$39,999, 5 = $40,000-$49,999, 6 = $50,000-$59,999, 7 = $60,000-$69,999,
8 = $70,000-$79,999, 9 = $80,000-$89,999, 10 = $90,000-$99,999, 11 = $100,000-$109,999, 12 = $110,000-$119,999,
13 = $120,000-$129,999, 14 = $130,000-$139,999, 15 = $140,000-$149,999, 16 = $150,000 or more'
dd$`Description of Variable`[7] <- " 1 = Not healthy at all, 5 = Very healthy"
View(dd)
dd$`Description of Variable`[8:69] <- "1 = certain, 2 = gamble"
dd$`Description of Variable`[70:75] <- '1 = Strongly Disagree, 2 = Somewhat Disagree, 3 =
Neutral, 4 = Somewhat Agree, 5 = Strongly Agree'
dd$`Description of Variable`[76] <- '1 = Yes, 2 = No'
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
View(dd)
# Clean skew data
# 5.14.20 KLS
# load required packages
library(here)
# load source functions
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# add and populate variable names column
dd[,'Variable Names'] <- NA
dd$`Variable Names`[1:9] <- c(as.character(dd$Variable[1:7]), 'Practice 1', 'Practice 2')
gambles <- list(a = (10:19), b = (22:31), c = (34:43), d = (46:55), e = (58:67))
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[y])
a <- strsplit(z, '_')
b[x] <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
dd$`Variable Names`[gambles[g][[1]]] <- b
}
rm(a, b, g, x, y, z, gambles)
dd$`Variable Names`[c(20:21, 32:33, 44:45, 56:57, 68:69)] <- paste0('Catch_', seq(1,10))
dd$`Variable Names`[c(70:75)] <- paste0('Strategy_', seq(1,6))
dd$`Variable Names`[c(76:84)] <- paste0('Investment_', seq(1,9))
dd$`Variable Names`[c(85:93)] <- paste0('Fraud_', seq(1,9))
dd$`Variable Names`[c(94:117)] <- paste0('AVI_', seq(1,24))
dd$`Variable Names`[c(118:132)] <- paste0('Numberacy_', seq(1,14))
dd$`Variable Names`[c(133:142)] <- paste0('Graph_Lit_', seq(1,10))
dd$`Variable Names`[143] <- 'DOB'
# add measurement units
dd$`Measurement Units` <- sapply(dt, class)
dd$`Measurement Units`[143] <- 'mm/dd/yyyy'
# Create and populate allowed_values in data dictionary
dd[,'Allowed Values'] <- NA
View(dd)
# Create and populate allowed_values in data dictionary
dd[,'Allowed Values'] <- NA
dd$`Allowed Values`[1] <- '1-209'
View(dd)
dd$`Allowed Values`[2] <- '22-85'
dd$`Allowed Values`[c(3, 8:69, 76)] <- '1-2'
dd$`Allowed Values`[c(4, 83)] <- '1-6'
dd$`Allowed Values`[5] <- '1-8'
dd$`Allowed Values`[6] <- '1-16'
dd$`Allowed Values`[c(7,70:75, 79:80)] <- '1-5'
dd$`Allowed Values`[77] <- 'Positive integers'
dd$`Allowed Values`[78] <- 'Monetary amount'
dd$`Allowed Values`[c(79,81)] <- 'Text'
View(dd)
View(dd)
dd$`Allowed Values`[c(81)] <- 'Text'
dd$`Allowed Values`[85] <- '1-7'
dd$`Allowed Values`[c(7,70:75, 79:80)] <- '1-5'
dd$`Allowed Values`[77] <- 'Positive integers'
dd$`Allowed Values`[78] <- 'Monetary amount'
dd$`Allowed Values`[c(81)] <- 'Text'
dd$`Allowed Values`[85] <- '1-7'
dd$`Allowed Values`[85:87] <- '1-7'
dd$`Description of Variable`[90] <- '1 = Mail, 2 = Phone call, 3 = Email, 4 = Website, 5 = Seminar,
6 = Other, 7 = Not applicable'
dd$`Description of Variable`[90] <- '1 = Mail, 2 = Phone call, 3 = Email, 4 = Website, 5 = Seminar,
6 = Other, 7 = Not applicable'
dd$`Description of Variable`[92] <- '1 = Stranger, 2 = Co-worker, 3 = Friend, 4 = Family member, 5 = Other, 6 = Not applicable'
View(dt)
range(dt$Q211)
range(dt$Q213)
range(dt$Q221)
levels(dt$Q221)
levels(dt$Q225_1)
levels(dt$Q225_2)
head(dt$Q227)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
View(dd)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
View(dd)
# Reorder columns
dd <- dd[c(1,3,4,5,2,6)]
View(dd)
View(dd)
# add measurement units
dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)]<- as.character(dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)])
# add measurement units
dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)]<- sapply(dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)], as.character)
dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)]
View(dt)
# add measurement units
dt[c(77,78, 81, 84, 91, 93, 123:128, 130:131)] <- sapply(dt[c(77,78, 81, 84, 91, 93, 123:128, 130:131)], as.character)
View(dt)
dd$`Measurement Units` <- sapply(dt, class)
dd$`Measurement Units`[143] <- 'mm/dd/yyyy'
View(dd)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
dd$`Description of Variable` <- sapply(dd$`Description of Variable`, as.character)
View(dd)
dd$`Description of Variable`[is.na(dd$`Description of Variable`)] <- ''
View(dd)
write.csv(dd, here("data", "bound_skew1_data_dictionary.csv"), row.names = FALSE)
source(here::here('scr', 'pairedttable.R'))
View(pairedttable)
View(pairedttable)
# load required packages
library(here)
library(lme4)
library(gdata)
library(tidyr)
library(rlist)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# load source functions
source(here::here('scr', 'isolate_skew.R'))
source(here::here('scr', 'clean_skew.R'))
source(here::here('scr', 'SummarySE.R'))
source(here::here('scr', 'pairedttable.R'))
# load data
dt <- read.csv(here::here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
saveRDS(b1.1, here::here('output', 'baseline.RDS'))
##follow-up t-tests
d2 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew'))
d3 <- spread(d2[,c(1,2,4)], 'deg_skew', 'accept')
b1_follow <- pairedttable(d3, colnames(d3[2:5]))
names(b1_follows)
names(b1_follow)
names(b1_follow)[3]
names(b1_follow)[3] <- 'pval'
names(b1_follow)
# run models on skew data
# 7.15.19 KLS updated 10.17.19
# add follow-up t-tests 2.10.20 KLS
# load required packages
library(here)
library(lme4)
library(gdata)
library(tidyr)
library(rlist)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# load source functions
source(here::here('scr', 'isolate_skew.R'))
source(here::here('scr', 'clean_skew.R'))
source(here::here('scr', 'SummarySE.R'))
source(here::here('scr', 'pairedttable.R'))
# set hard-coded variables
# load data
dt <- read.csv(here::here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
saveRDS(b1.1, here::here('output', 'baseline.RDS'))
##follow-up t-tests
d2 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew'))
d3 <- spread(d2[,c(1,2,4)], 'deg_skew', 'accept')
b1_follow <- pairedttable(d3, colnames(d3[2:5]))
names(b1_follow)[3] <- 'pval'
list.save(b1_follow, here::here('output', 'b1_follow.rds'))
rm(d2,d3, b1_follow)
b1_follow
# load required packages
library(here)
library(lme4)
library(gdata)
library(tidyr)
library(rlist)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# load source functions
source(here::here('scr', 'isolate_skew.R'))
source(here::here('scr', 'clean_skew.R'))
source(here::here('scr', 'SummarySE.R'))
source(here::here('scr', 'pairedttable.R'))
# load data
dt <- read.csv(here::here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
saveRDS(b1.1, here::here('output', 'baseline.RDS'))
##follow-up t-tests
d2 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew'))
d3 <- spread(d2[,c(1,2,4)], 'deg_skew', 'accept')
b1_follow <- pairedttable(d3, colnames(d3[2:5]))
names(b1_follow)[3] <- 'pval'
list.save(b1_follow, here::here('output', 'b1_follow.rds'))
b1_follow
# model 1 - add valence
m1 <- glmer(accept ~ deg_skew * valence + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
saveRDS(m1, here::here('output', 'm1.RDS'))
## compare model 1 and model 2
anova(b1.1,m1)
## follow-up t-tests
d4 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew', 'valence'))
d4$skew_valence <- interaction(d4$deg_skew, d4$valence)
d5 <- spread(d4[,c(1,9,5)], 'skew_valence', 'accept')
m1_follow_neutral <- pairedttable(d5[c(1,2:5)], colnames(d5[2:5]))
m1_follow_gain <- pairedttable(d5[c(1,6:9)], colnames(d5[6:9]))
m1_follow_loss <- pairedttable(d5[c(1,10:13)], colnames(d5[10:13]))
names(m1_follow_loss)
names(b1_follow_loss)[3] <- 'pval'
names(m1_follow_loss)[3] <- 'pval'
list.save(m1_follow_neutral, here::here('output', 'm1_follow_neutral.rds'))
list.save(m1_follow_gain, here::here('output', 'm1_follow_gain.rds'))
list.save(m1_follow_loss, here::here('output', 'm1_follow_loss.rds'))
rm(d4, d5, m1_follow_neutral, m1_follow_gain, m1_follow_loss)
# model 2 -  magnitude instead of valence
m2 <- glmer(accept ~ deg_skew  * magnitude + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m2, correlation = FALSE)
saveRDS(m2, here::here('output', 'm2.RDS'))
## compare model 2 to baseline
anova(b1.1,m2)
## Follow-up t-tests
d6 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew', 'magnitude'))
d6$skew_mag <- interaction(d6$deg_skew, d6$magnitude)
d7 <- spread(d6[,c(1,9,5)], 'skew_mag', 'accept')
m2_follow_zero <- pairedttable(d7[c(1,2:5)], colnames(d7[2:5]))
m2_follow_small <- pairedttable(d7[c(1,6:9)], colnames(d7[6:9]))
m2_follow_large <- pairedttable(d7[c(1,10:13)], colnames(d7[10:13]))
names(m2_follow_large)[3] <- 'pval'
list.save(m2_follow_zero, here::here('output', 'm2_follow_zero.rds'))
list.save(m2_follow_small, here::here('output', 'm2_follow_smallmag.rds'))
list.save(m2_follow_large, here::here('output', 'm2_follow_largemag.rds'))
rm(d6, d7, m2_follow_zero, m2_follow_small, m2_follow_large)
# model 3 - interaction between mag and val
m3 <- glmer(accept ~ deg_skew * magval + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m3, correlation = FALSE)
saveRDS(m3, here::here('output', 'm3.RDS'))
## compare model 3 to baseline
anova(b1.1, m3)
## follow-up t-tests
d8 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew', 'magval'))
d8$skew_magval <- interaction(d8$deg_skew, d8$magval)
d9 <- spread(d8[,c(1,9,5)], 'skew_magval', 'accept')
#neutral
m3_follow_neutral_0 <- pairedttable(d9[c(1,2:5)], colnames(d9[2:5]))
list.save(m3_follow_neutral_0, here::here('output', 'm3_follow_neutral_0.rds'))
#losses
m3_follow_loss_5 <- pairedttable(d9[c(1,6:9)], colnames(d9[6:9]))
list.save(m3_follow_loss_5, here::here('output', 'm3_follow_loss_5.rds'))
m3_follow_loss_05 <- pairedttable(d9[c(1,10:13)], colnames(d9[10:13]))
list.save(m3_follow_loss_05, here::here('output', 'm3_follow_loss_05.rds'))
#gains
m3_follow_gain_5 <- pairedttable(d9[c(1,14:17)], colnames(d9[14:17]))
list.save(m3_follow_gain_5, here::here('output', 'm3_follow_gain_5.rds'))
m3_follow_gain_05 <- pairedttable(d9[c(1,18:21)], colnames(d9[18:21]))
list.save(m3_follow_gain_05, here::here('output', 'm3_follow_gain_05.rds'))
rm(d8, d9, m3_follow_neutral_0, m3_follow_loss_5, m3_follow_loss_05, m3_follow_gain_5, m3_follow_gain_05)
## follow-up t-tests
d8 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew', 'magval'))
d8$skew_magval <- interaction(d8$deg_skew, d8$magval)
d9 <- spread(d8[,c(1,9,5)], 'skew_magval', 'accept')
#neutral
m3_follow_neutral_0 <- pairedttable(d9[c(1,2:5)], colnames(d9[2:5]))
list.save(m3_follow_neutral_0, here::here('output', 'm3_follow_neutral_0.rds'))
names(m3_follow_loss_5)
#losses
m3_follow_loss_5 <- pairedttable(d9[c(1,6:9)], colnames(d9[6:9]))
names(m3_follow_loss_5)
names(m3_follow_loss_5)[3] <- 'pval'
#gains
m3_follow_gain_5 <- pairedttable(d9[c(1,14:17)], colnames(d9[14:17]))
names(m3_follow_gain_5)[3] <- 'pval'
names(m3_follow_gain_5)[3] <- 'pval'
list.save(m3_follow_gain_5, here::here('output', 'm3_follow_gain_5.rds'))
#losses
m3_follow_loss_5 <- pairedttable(d9[c(1,6:9)], colnames(d9[6:9]))
names(m3_follow_loss_5)[3] <- 'pval'
list.save(m3_follow_loss_5, here::here('output', 'm3_follow_loss_5.rds'))
#gains
m3_follow_gain_5 <- pairedttable(d9[c(1,14:17)], colnames(d9[14:17]))
names(m3_follow_gain_5)[3] <- 'pval'
m3_follow_gain_5
View(d9)
#gains
m3_follow_gain_05 <- pairedttable(d9[c(1,14:17)], colnames(d9[14:17]))
list.save(m3_follow_gain_5, here::here('output', 'm3_follow_gain_5.rds'))
m3_follow_gain_5 <- pairedttable(d9[c(1,18:21)], colnames(d9[18:21]))
names(m3_follow_gain_5)[3] <- 'pval'
list.save(m3_follow_gain_05, here::here('output', 'm3_follow_gain_05.rds'))
rm(d8, d9, m3_follow_neutral_0, m3_follow_loss_5, m3_follow_loss_05, m3_follow_gain_5, m3_follow_gain_05)
# model 2 -  magnitude instead of valence
m2 <- glmer(accept ~ deg_skew  * magnitude + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m2, correlation = FALSE)
saveRDS(m2, here::here('output', 'm2.RDS'))
## compare model 2 to baseline
anova(b1.1,m2)
## Follow-up t-tests
d6 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew', 'magnitude'))
d6$skew_mag <- interaction(d6$deg_skew, d6$magnitude)
d7 <- spread(d6[,c(1,9,5)], 'skew_mag', 'accept')
m2_follow_zero <- pairedttable(d7[c(1,2:5)], colnames(d7[2:5]))
m2_follow_small <- pairedttable(d7[c(1,6:9)], colnames(d7[6:9]))
m2_follow_large <- pairedttable(d7[c(1,10:13)], colnames(d7[10:13]))
names(m2_follow_large)[3] <- 'pval'
list.save(m2_follow_zero, here::here('output', 'm2_follow_zero.rds'))
list.save(m2_follow_small, here::here('output', 'm2_follow_smallmag.rds'))
list.save(m2_follow_large, here::here('output', 'm2_follow_largemag.rds'))
rm(d6, d7, m2_follow_zero, m2_follow_small, m2_follow_large)
# model 3 - interaction between mag and val
m3 <- glmer(accept ~ deg_skew * magval + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m3, correlation = FALSE)
saveRDS(m3, here::here('output', 'm3.RDS'))
## compare model 3 to baseline
anova(b1.1, m3)
## follow-up t-tests
d8 <- summarySE(d1, 'accept', groupvars = c('ID', 'deg_skew', 'magval'))
d8$skew_magval <- interaction(d8$deg_skew, d8$magval)
d9 <- spread(d8[,c(1,9,5)], 'skew_magval', 'accept')
#neutral
m3_follow_neutral_0 <- pairedttable(d9[c(1,2:5)], colnames(d9[2:5]))
list.save(m3_follow_neutral_0, here::here('output', 'm3_follow_neutral_0.rds'))
#losses
m3_follow_loss_5 <- pairedttable(d9[c(1,6:9)], colnames(d9[6:9]))
names(m3_follow_loss_5)[3] <- 'pval'
list.save(m3_follow_loss_5, here::here('output', 'm3_follow_loss_5.rds'))
m3_follow_loss_05 <- pairedttable(d9[c(1,10:13)], colnames(d9[10:13]))
list.save(m3_follow_loss_05, here::here('output', 'm3_follow_loss_05.rds'))
#gains
m3_follow_gain_05 <- pairedttable(d9[c(1,14:17)], colnames(d9[14:17]))
list.save(m3_follow_gain_5, here::here('output', 'm3_follow_gain_5.rds'))
m3_follow_gain_5 <- pairedttable(d9[c(1,18:21)], colnames(d9[18:21]))
names(m3_follow_gain_5)[3] <- 'pval'
list.save(m3_follow_gain_05, here::here('output', 'm3_follow_gain_05.rds'))
m3_follow_gain_5
list.save(m3_follow_gain_5, here::here('output', 'm3_follow_gain_5.rds'))
