d1 <- isolate_skew(dt, 1, grep('Q173', colnames(dt)):grep('Q27', colnames(dt)))
# investment & fraud
d2 <- data.frame(d1$ID, (d1$Q173 - 2)*-1, d1$Q177, d1[11:14])
colnames(d2) <- c('ID', 'lost_invest', 'why_lost', 'detect_fraud', 'likely_fraud', 'high_pressure', 'avoid_fraud')
# investment graph
# Have you ever made an investment where you lost some or all of the money you invested?
d2$lost_invest <- factor(d2$lost_invest)
d2$lost_invest <- revalue(d2$lost_invest, c("0"="No", "1"="Yes"))
ggplot(d2, aes(lost_invest)) + geom_histogram(binwidth = .5, stat = "count") +
ggtitle('Have you ever made an investment where you lost some \nor all of the money you invested?')
# investment graph
# Have you ever made an investment where you lost some or all of the money you invested?
library(plyr)
d2$lost_invest <- factor(d2$lost_invest)
d2$lost_invest <- revalue(d2$lost_invest, c("0"="No", "1"="Yes"))
ggplot(d2, aes(lost_invest)) + geom_histogram(binwidth = .5, stat = "count") +
ggtitle('Have you ever made an investment where you lost some \nor all of the money you invested?')
# If yes, Which statement below best describes why you lost money?
d2$why_lost <- factor(d2$why_lost)
d2$why_lost <- revalue(d2$why_lost, c('1'='Bad Investment', '2'='Market Downturn',
'3'='Lack of Knowledge', '4'='Misled or Defrauded', '5'='Other'))
ggplot(d2[which(d2$lost_invest=='Yes'),], aes(why_lost, fill = why_lost)) +
geom_histogram(binwidth = .5, stat = "count") +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=12)) + guides(fill=FALSE) +
ggtitle('If yes, which statement below best describes why you lost money?') +
theme(axis.title.x = element_blank())
# fraud
## How able are you to detect a fraudulent investment? (select one)
d2$detect_fraud <- factor(d2$detect_fraud)
d2$detect_fraud <- revalue(d2$detect_fraud , c('1' = 'not able to detect', '7' = 'very able to detect'))
ggplot(d2, aes(detect_fraud)) + geom_histogram(binwidth = .5, stat = "count") +
ggtitle("How able are you to detect a fraudulent investment?") + theme(axis.title.x = element_blank())
# How likely are you to make a fraudulent investment? (select one)
d2$likely_fraud <- factor(d2$likely_fraud)
d2$likely_fraud <- revalue(d2$likely_fraud , c('1' = 'not at all likely', '7' = 'very likely'))
ggplot(d2, aes(likely_fraud)) + geom_histogram(binwidth = .5, stat = "count") +
ggtitle("How likely are you to make a fraudulent investment?") + theme(axis.title.x = element_blank())
# How able are you to resist high-pressure sales tactics when buying investments? (select one)
d2$high_pressure <- factor(d2$high_pressure)
d2$high_pressure <- revalue(d2$high_pressure , c('1' = 'not at all able to resist', '7' = 'very able to resist'))
ggplot(d2, aes(high_pressure)) + geom_histogram(binwidth = .5, stat = "count") +
ggtitle("How able are you to resist high-pressure sales tactics \nwhen buying investments?") +
theme(axis.title.x = element_blank())
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
source(here('scr', 'clean_skew.R'))
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# identify begining and end of
d1 <- isolate_skew(dt, 1, grep('Q173', colnames(dt)):grep('Q27', colnames(dt)))
# investment & fraud
d2 <- data.frame(d1$ID, (d1$Q173 - 2)*-1, d1$Q177, d1[11:14])
colnames(d2) <- c('ID', 'lost_invest', 'why_lost', 'detect_fraud', 'likely_fraud', 'high_pressure', 'avoid_fraud')
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# identify begining and end of
d1 <- isolate_skew(dt, 1, grep('Q173', colnames(dt)):grep('Q27', colnames(dt)))
# investment & fraud
d2 <- data.frame(d1$ID, (d1$Q173 - 2)*-1, d1$Q177, d1[11:14])
colnames(d2) <- c('ID', 'lost_invest', 'why_lost', 'detect_fraud', 'likely_fraud', 'high_pressure', 'avoid_fraud')
library(plyr)
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
rm(d0, d1)
# investment and fraud
# 11.5.19 KLS
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# identify begining and end of
d1 <- isolate_skew(dt, 1, grep('Q173', colnames(dt)):grep('Q27', colnames(dt)))
# investment & fraud
d2 <- data.frame(d1$ID, (d1$Q173 - 2)*-1, d1$Q177, d1[11:14])
colnames(d2) <- c('ID', 'lost_invest', 'why_lost', 'detect_fraud', 'likely_fraud', 'high_pressure', 'avoid_fraud')
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# identify begining and end of
d1 <- isolate_skew(dt, 1, grep('Q173', colnames(dt)):grep('Q27', colnames(dt)))
# investment & fraud
d2 <- data.frame(d1$ID, (d1$Q173 - 2)*-1, d1$Q177, d1[11:14])
colnames(d2) <- c('ID', 'lost_invest', 'why_lost', 'detect_fraud', 'likely_fraud', 'high_pressure', 'avoid_fraud')
View(d2)
View(d2)
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d3 <- clean_skew2(d0)
View(d3)
#recode response to acceptance
d3$accept <- d3$response - 1
# add skew count variable
d4 <-count_skew(d3)
rm(d0, d1)
View(d2)
source('~/.active-rstudio-document', echo=TRUE)
View(d4)
# merge data frames
d5 <- merge(d2, d4, by = 'ID')
View(d5)
# merge data frames
d5 <- merge(d4, d2, by = 'ID')
View(d5)
View(d5)
s`1_corr2 <- rcorr(as.matrix(d5[c(4:5, 7:9)]))`
s1_corr2 <- rcorr(as.matrix(d5[c(4:5, 7:9)]))`
s
)
1
``
clear
s1_corr2 <- rcorr(as.matrix(d5[c(4:5, 7:9)]))
library(Hmisc)
s1_corr2 <- rcorr(as.matrix(d5[c(4:5, 7:9)]))
View(s1_corr2)
s1_corr2
saveRDS(s1_corr2, here('output', 's1_corr2.RDS'))
# models
d5$magval <- interaction(d5$magnitude, d5$valence)
m1 <- lm(skew_count ~ lost_invest + magval, data = d5)
summary(m1)
View(d5)
View(d5)
m1 <- lm(skew_count ~ as.numeric(as.character(lost_invest)) + magval, data = d5)
summary(m1)
d5$skew_count
d5&skew_count <- as.numeric(as.character(d5$skew_count))
d5$skew_count <- as.numeric(as.character(d5$skew_count))
m1 <- lm(skew_count ~ lost_invest + magval, data = d5)
summary(m1)
m2 <- lm(skew_count ~ detect_fraud + magval, data = d5)
summary(m2)
m3 <- lm(skew_count ~ likely_fraud + magval, data = d5)
summary(m3)
m4 <- lm(skew_count ~ high_pressure + magval, data = d5)
summary(m4)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# identify begining and end of
d1 <- isolate_skew(dt, 1, grep('Q173', colnames(dt)):grep('Q27', colnames(dt)))
# investment & fraud
d2 <- data.frame(d1$ID, (d1$Q173 - 2)*-1, d1$Q177, d1[11:14])
colnames(d2) <- c('ID', 'lost_invest', 'why_lost', 'detect_fraud', 'likely_fraud', 'high_pressure', 'avoid_fraud')
library(plyr)
# investment graph
# Have you ever made an investment where you lost some or all of the money you invested?
d2$lost_invest <- factor(d2$lost_invest)
View(d1)
sum(d2$lost_invest)
colSums(d2)
colSums(d2$lost_invest)
View(d2)
colSums(as.numeric(as.character(d2$lost_invest)))
sum(as.numeric(as.character(d2$lost_invest)))
n_lost_invest <- sum(as.numeric(as.character(d2$lost_invest)))
n_total <- nrow(d2)
n_fraud <- nrow(d2[which(d2$detect_fraud == 'Misled or Defrauded'),])
n_fraud <- nrow(d2[which(d2$why_lost == 'Misled or Defrauded'),])
n_fraud <- nrow(d2[which(d2$why_lost == 'Misled or Defrauded'),])
d2$why_lost
n_fraud <- nrow(d2[which(d2$why_lost == 4),])
# fraud
## How able are you to detect a fraudulent investment? (select one)
d2$detect_fraud <- factor(d2$detect_fraud)
d2$detect_fraud <- revalue(d2$detect_fraud , c('1' = 'not able to detect', '7' = 'very able to detect'))
n_fraud <- nrow(d2[which(d2$why_lost == 'Misled or Defrauded'),])
n_fraud <- nrow(d2[which(d2$why_lost == 'Misled or Defrauded'),])
source('~/github/boundSkew1/08_invest+fraud.R', echo=TRUE)
source('~/github/boundSkew1/08_invest+fraud.R', echo=TRUE)
'Misled or Defrauded'
n_fraud <- nrow(d2[which(d2$why_lost == 'Misled or Defrauded'),])
real_world_n <- c(n_total, n_fraud, n_lost_invest)
n_lost_invest <- sum(as.numeric(as.character(d2$lost_invest)))
d2$lost_invest
n_lost_invest <- nrow(d2[which(d2$lost_invest == 'Yes'),])
n_total <- nrow(d2)
n_fraud <- nrow(d2[which(d2$why_lost == 'Misled or Defrauded'),])
real_world_n <- c(n_total, n_fraud, n_lost_invest)
# investment and fraud
# 11.5.19 KLS
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# identify begining and end of
d1 <- isolate_skew(dt, 1, grep('Q173', colnames(dt)):grep('Q27', colnames(dt)))
# investment & fraud
d2 <- data.frame(d1$ID, (d1$Q173 - 2)*-1, d1$Q177, d1[11:14])
colnames(d2) <- c('ID', 'lost_invest', 'why_lost', 'detect_fraud', 'likely_fraud', 'high_pressure', 'avoid_fraud')
# counts
n_lost_invest <- nrow(d2[which(d2$lost_invest == 'Yes'),])
# counts
n_lost_invest <- nrow(d2[which(d2$lost_invest == 1),])
n_total <- nrow(d2)
n_fraud <- nrow(d2[which(d2$why_lost == 4),])
real_world_n <- c(n_total, n_fraud, n_lost_invest)
write.csv(real_world_n, here('output', 'real_world1.csv'))
write.csv(real_world_n, here('output', 'real_world1.csv'), row.names = FALSE)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict)
d1 <- score_avi(d0)
View(d1)
View(d0)
View(d0)
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
View(d1)
View(dict)
dict$Question[117]
View(dict)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
d1 <- score_avi(d0)
first
last <- grep("Serene", qs)
View(dt)
View(dt)
View(dict)
dict[117]
dict[,117]
dict[117,]
last <- grep("Lonely", qs)
#last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
View(d0)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict)
#d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
d1 <- score_avi(d0)
View(d0)
View(score_avi)
View(score_avi)
avi = d0
avi$hap <- (avi$Enthusiastic + avi$Excited + avi$Strong + avi$Elated) / 4
avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful + avi$Serene) / 4
#avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful + avi$Serene) / 4
avi$la <- (avi$Quiet + avi$Passive + avi$Still) / 3
#avi$pos <- (avi$Content + avi$Happy + avi$Satisfied ) /3 # Missing all
avi$lan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
avi$han <- (avi$Fearful + avi$Hostile + avi$Nervous) /3
avi$ha <- (avi$Aroused + avi$Surprised + avi$Astonished) / 3
head(avi[27])
# graph affective
# 11.11.19 KLS
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'SummarySE.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs)
#last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict)
avi = d0
length(avi)
n_items <- length(avi)
#avi$neg <- (avi$Lonely + avi$Sad + avi$Unhappy ) /3 # Missing all but lonely
end <- length(avi)
avi$hap <- (avi$Enthusiastic + avi$Excited + avi$Strong + avi$Elated) / 4
avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful) / 3 # modified missing Serene
#avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful + avi$Serene) / 4
avi$la <- (avi$Quiet + avi$Passive + avi$Still) / 3
#avi$pos <- (avi$Content + avi$Happy + avi$Satisfied ) /3 # Missing all
avi$lan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
avi$han <- (avi$Fearful + avi$Hostile + avi$Nervous) /3
avi$ha <- (avi$Aroused + avi$Surprised + avi$Astonished) / 3
#avi$neg <- (avi$Lonely + avi$Sad + avi$Unhappy ) /3 # Missing all but lonely
end <- length(avi)
return(avi[,c(1:2,n_items+1:end)])
return(avi[,c(1:2,(n_items+1):end)])
n_items+1
end
(n_items+1):end
avi[,c(1:2,(n_items+1):end)])
avi[,c(1:2,(n_items+1):end)]
head(avi[,c(1:2,(n_items+1):end)])
score_avi <- function(avi) {
n_items <- length(avi)
avi$hap <- (avi$Enthusiastic + avi$Excited + avi$Strong + avi$Elated) / 4
avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful) / 3 # modified missing Serene
#avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful + avi$Serene) / 4
avi$la <- (avi$Quiet + avi$Passive + avi$Still) / 3
#avi$pos <- (avi$Content + avi$Happy + avi$Satisfied ) /3 # Missing all
avi$lan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
avi$han <- (avi$Fearful + avi$Hostile + avi$Nervous) /3
avi$ha <- (avi$Aroused + avi$Surprised + avi$Astonished) / 3
#avi$neg <- (avi$Lonely + avi$Sad + avi$Unhappy ) /3 # Missing all but lonely
end <- length(avi)
return(avi[,c(1:2,(n_items+1):end)])
}
# graph affective
# 11.11.19 KLS
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'SummarySE.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs)
#last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict)
#d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
d1 <- score_avi(d0)
# Graph means
d2 <- cbind(colMeans(d1), apply(d1, 2, sd), apply(d1, 2, sd)/sqrt(nrow(d1)))
d2 <- d2[3:nrow(d2),]
colnames(d2) <- c('Mean', 'SD', 'SE')
names <- rownames(d2); rownames(d2) <- NULL
d2 <- cbind(names, d2)
d2 <- data.frame(d2)
d2$Mean <- as.numeric(as.character(d2$Mean))
d2$SD <- as.numeric(as.character(d2$SD))
d2$SE <- as.numeric(as.character(d2$SE))
d2$names <- c('low arousal - positive', 'high arousal - positive', 'low arousal',
'low arousal - negative', 'high arousal','high arousal -negative')
d2$names <- factor(d2$names, levels =c('low arousal', 'low arousal - negative', 'low arousal - positive',
'high arousal','high arousal -negative', 'high arousal - positive'))
ggplot(d2, aes(names, Mean, fill = names)) + geom_bar(stat='identity') + annotate("text", x=1, y=0, label="Never") +
annotate("text", x=1, y=5, label="All the time") +
geom_errorbar(aes(ymin = Mean-SE, ymax = Mean + SE), width = .2, position=position_dodge(.9)) +
theme_minimal() + theme(legend.position = 'none', axis.text.x  = element_text(angle=90, vjust=0.5, size = 10)) + xlab("Affect") + ylab('Average Rating') +
expand_limits(y=c(1,5)) + geom_vline(aes(xintercept=3.5))
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs)
#last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict)
#d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
d1 <- score_avi(d0)
# separate skew
d3 <- isolate_skew(dt,c(1,2),10:69)
d4 <- clean_skew2(d3)
#recode response to acceptance
d4$accept <- d4$response - 1
# add skew count variable
d5 <-count_skew(d4)
rm(d3, d4)
# separate skew
d3 <- isolate_skew(dt,c(1,2),10:69)
d4 <- clean_skew2(d3)
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# separate skew
d3 <- isolate_skew(dt,c(1,2),10:69)
d4 <- clean_skew2(d3)
#recode response to acceptance
d4$accept <- d4$response - 1
# add skew count variable
d5 <-count_skew(d4)
rm(d3, d4)
View(d5)
#merge data frames
d3 <- merge(d5,d1, by = 'ID')
View(d3)
d3$skew_count <- as.integer(as.character(d3$skew_count))
rm(d1,d5)
# correlations
s1_corr <- rcorr(as.matrix(d3[5:11]))
saveRDS(s1_corr, here('output', 's1_corr3.RDS'))
# correlations
s3_corr <- rcorr(as.matrix(d3[5:11]))
library(Hmisc)
# correlations
s3_corr <- rcorr(as.matrix(d3[5:11]))
s3_corr
# correlations
s3_corr <- rcorr(as.matrix(d3[4:11]))
s3_corr
# correlations
s1_corr <- rcorr(as.matrix(d3[4:11]))
saveRDS(s1_corr, here('output', 's1_corr3.RDS'))
# models
d3$magval <- interaction(d3$magnitude, d3$valence)
m1 <- lm(skew_count ~ hap + magval, data = d3)
summary(m1)
m2 <- lm(skew_count ~ lap + magval, data = d3)
summary(m2)
m3 <- lm(skew_count ~ la + magval, data = d3)
summary(m3)
m4 <- lm(skew_count ~ lan + magval, data = d3)
summary(m4)
m5 <- lm(skew_count ~ han + magval, data = d3)
summary(m5)
m6 <- lm(skew_count ~ ha + magval, data = d3)
summary(m6)
clear
