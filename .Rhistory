xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r = 0.17, p = 0.012', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 9, label = 'r = 0.17, p = 0.012', color = '#006699', size = 8)
dev.off()
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
annotate('text', x = 2, y = 1, label = 'r = 0.17, p = 0.012', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 9, label = 'r = 0.17, p = 0.012', color = '#006699', size = 8)
# graph cognitive
d2 <- gather(dt[c(1:5, 18:19)], cognition, measurement, graph_lit:Numeracy)
labels <- c(graph_lit = "Graph Literacy", Numeracy = "Numeracy")
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
annotate('text', x = 2, y = 1, label = 'r = 0.17, p = 0.012', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 9, label = 'r = 0.17, p = 0.012', color = '#006699', size = 8)
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
annotate('text', x = 2, y = 1, label = 'r = -0.20, p = 0.004', color = '#CC0033', size = 8) +
annotate('text', x = 20, y = 1, label = 'r = -0.20, p = 0.003', color = '#006699', size = 8)
ggplot(dt, aes(high_pressure, skew_count)) +
geom_jitter(size=1, alpha=0.2, width=0.3, color = '#009900') +
geom_smooth(method=lm, color = '#009900', fill = '#009900') +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsementt') + ylab('Skew Count') + ggtitle('Real World Relationships') +
annotate('text', x = 20, y = 1, label = 'r = -0.16, p = 0.024', color = '#009900', size = 8)
ggplot(dt, aes(high_pressure, skew_count)) +
geom_jitter(size=1, alpha=0.2, width=0.3, color = '#009900') +
geom_smooth(method=lm, color = '#009900', fill = '#009900') +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsementt') + ylab('Skew Count') + ggtitle('Real World Relationships') +
annotate('text', x = 2, y = 1, label = 'r = -0.16, p = 0.024', color = '#009900', size = 8)
ggplot(dt, aes(high_pressure, skew_count)) +
geom_jitter(size=1, alpha=0.2, width=0.3, color = '#009900') +
geom_smooth(method=lm, color = '#009900', fill = '#009900') +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsementt') + ylab('Skew Count') + ggtitle('Real World Relationships') +
annotate('text', x = 3, y = 1, label = 'r = -0.16, p = 0.024', color = '#009900', size = 8)
# graph real world
pdf('figs/realworld_poster.pdf', width = 7, height = 7)
ggplot(dt, aes(high_pressure, skew_count)) +
geom_jitter(size=1, alpha=0.2, width=0.3, color = '#009900') +
geom_smooth(method=lm, color = '#009900', fill = '#009900') +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsementt') + ylab('Skew Count') + ggtitle('Real World Relationships') +
annotate('text', x = 3, y = 1, label = 'r = -0.16, p = 0.024', color = '#009900', size = 8)
dev.off()
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r = 0.17, p = 0.012', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = 'r = 0.17, p = 0.012', color = '#006699', size = 8)
pdf('figs/strategy_poster.pdf', width = 7, height = 7)
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r = 0.17, p = 0.012', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = 'r = 0.17, p = 0.012', color = '#006699', size = 8)
dev.off()
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
annotate('text', x = 2, y = 1, label = 'r = -0.20, p = 0.004', color = '#CC0033', size = 8) +
annotate('text', x = 20, y = 1, label = 'r = -0.20, p = 0.003', color = '#006699', size = 8)
graph_text <- data.frame(measurement = 20, skew_count = 2, lab = 'r = -0.20, p = 0.004',
cognition=factor(graph_lit, levels = c('graph_lit', 'Numeracy')))
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004')
graph_text <- data.frame(measurement = 20, skew_count = 2, lab = 'r = -0.20, p = 0.004',
cognition=factor(graph_lit, levels = c('graph_lit', 'Numeracy')))
graph_text <- data.frame(measurement = 20, skew_count = 2, lab = 'r = -0.20, p = 0.004',
cognition=factor('graph_lit', levels = c('graph_lit', 'Numeracy')))
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004')
num_text <- data.frame(measurement = 2, skew_count = 2, lab = 'r = -0.20, p = 0.003',
cognition=factor('Numeracy', levels = c('graph_lit', 'Numeracy')))
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004') +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003')
num_text <- data.frame(measurement = 5, skew_count = 2, lab = 'r = -0.20, p = 0.003',
cognition=factor('Numeracy', levels = c('graph_lit', 'Numeracy')))
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004') +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003')
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004', size = md) +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003', size = md)
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004', size = 8) +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003', size = 8)
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004', size = 8) +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003', size = 8)
graph_text <- data.frame(measurement = 25, skew_count = 2, lab = 'r = -0.20, p = 0.004',
cognition=factor('graph_lit', levels = c('graph_lit', 'Numeracy')))
num_text <- data.frame(measurement = 5, skew_count = 2, lab = 'r = -0.20, p = 0.003',
cognition=factor('Numeracy', levels = c('graph_lit', 'Numeracy')))
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004', size = 8) +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003', size = 8)
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004') +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003')
# load required packages
library(here)
library(ggplot2)
library(tidyr)
# load data
dt <- read.csv(here::here('output', 'individual_differences.csv'))
# graph constants
lg = 26 # text size
md = 20
sm = 14
custom_plot = list(theme(
plot.title = element_text(size = lg, hjust = 0.5),
axis.title.x = element_text(size = md), axis.text.x = element_text(size = sm),
axis.title.y = element_text(size = md), axis.text.y = element_text(size = sm),
legend.title = element_text(size = md), legend.text = element_text(size = sm),
legend.position='top', strip.text.x = element_text(size=md))
)
# graph affect vs. deliberative
d1 <- gather(dt[1:7], strategy, measurement, gut:math)
pdf('figs/strategy_poster.pdf', width = 7, height = 7)
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r = 0.17, p = 0.012', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = 'r = 0.17, p = 0.012', color = '#006699', size = 8)
dev.off()
# graph cognitive
d2 <- gather(dt[c(1:5, 18:19)], cognition, measurement, graph_lit:Numeracy)
labels <- c(graph_lit = "Graph Literacy", Numeracy = "Numeracy")
graph_text <- data.frame(measurement = 25, skew_count = 2, lab = 'r = -0.20, p = 0.004',
cognition=factor('graph_lit', levels = c('graph_lit', 'Numeracy')))
num_text <- data.frame(measurement = 5, skew_count = 2, lab = 'r = -0.20, p = 0.003',
cognition=factor('Numeracy', levels = c('graph_lit', 'Numeracy')))
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004') +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003')
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004') +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003') + theme(legend.position='none')
pdf('figs/cognitive_poster.pdf', width = 7, height = 7)
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.20, p = 0.004') +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003') + theme(legend.position='none')
dev.off()
s1_corrCI <- readRDS("~/github/boundSkew1/output/s1_corrCI.RDS")
View(s1_corrCI)
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r =	0.17 [0.04, 0.3]', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = '-0.06 [-0.2, 0.07]', color = '#006699', size = 8)
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'italics(r) =	0.17 [0.04, 0.3]', parse = TRUE, color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = 'r = -0.06 [-0.2, 0.07]', color = '#006699', size = 8)
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r =	0.17 [0.04, 0.3]', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = 'r = -0.06 [-0.2, 0.07]', color = '#006699', size = 8)
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r = 0.17 [0.04, 0.3]', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = 'r = -0.06 [-0.2, 0.07]', color = '#006699', size = 8)
pdf('figs/strategy_poster.pdf', width = 7, height = 7)
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r = 0.17 [0.04, 0.3]', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = 'r = -0.06 [-0.2, 0.07]', color = '#006699', size = 8)
dev.off()
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r =-0.2 [-0.32, -0.06]') +
geom_text(data = num_text, label = 'r = -0.20, p = 0.003') + theme(legend.position='none')
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.2 [-0.32, -0.06]') +
geom_text(data = num_text, label = 'r = -0.2 [-0.33, -0.07]') + theme(legend.position='none')
pdf('figs/cognitive_poster.pdf', width = 7, height = 7)
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.2 [-0.32, -0.06]') +
geom_text(data = num_text, label = 'r = -0.2 [-0.33, -0.07]') + theme(legend.position='none')
dev.off()
ggplot(dt, aes(high_pressure, skew_count)) +
geom_jitter(size=1, alpha=0.2, width=0.3, color = '#009900') +
geom_smooth(method=lm, color = '#009900', fill = '#009900') +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsementt') + ylab('Skew Count') + ggtitle('Real World Relationships') +
annotate('text', x = 3, y = 1, label = 'r = -0.16 [-0.29, -0.02]', color = '#009900', size = 8)
# graph real world
pdf('figs/realworld_poster.pdf', width = 7, height = 7)
ggplot(dt, aes(high_pressure, skew_count)) +
geom_jitter(size=1, alpha=0.2, width=0.3, color = '#009900') +
geom_smooth(method=lm, color = '#009900', fill = '#009900') +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsementt') + ylab('Skew Count') + ggtitle('Real World Relationships') +
annotate('text', x = 3, y = 1, label = 'r = -0.16 [-0.29, -0.02]', color = '#009900', size = 8)
dev.off()
# load required packages
library(here)
library(ggplot2)
library(tidyr)
# load data
dt <- read.csv(here::here('output', 'individual_differences.csv'))
# graph constants
lg = 26 # text size
md = 20
sm = 14
custom_plot = list(theme(
plot.title = element_text(size = lg, hjust = 0.5),
axis.title.x = element_text(size = md), axis.text.x = element_text(size = sm),
axis.title.y = element_text(size = md), axis.text.y = element_text(size = sm),
legend.title = element_text(size = md), legend.text = element_text(size = sm),
legend.position='top', strip.text.x = element_text(size=md))
)
# graph affect vs. deliberative
d1 <- gather(dt[1:7], strategy, measurement, gut:math)
pdf('figs/strategy_poster.pdf', width = 7, height = 7)
ggplot(d1, aes(measurement, skew_count, color = strategy, fill = strategy)) +
geom_jitter(size=1, alpha=0.3, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_color_brewer(name='Strategy', palette="Set1", breaks=c('gut', 'math'), labels=c('Affective', 'Deliberative')) +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsement') + ylab('Skew Count') + ggtitle('Decision Strategy') +
annotate('text', x = 2, y = 1, label = 'r = 0.17 [0.04, 0.3]', color = '#CC0033', size = 8) +
annotate('text', x = 2, y = 8, label = 'r = -0.06 [-0.2, 0.07]', color = '#006699', size = 8)
dev.off()
# graph cognitive
d2 <- gather(dt[c(1:5, 18:19)], cognition, measurement, graph_lit:Numeracy)
labels <- c(graph_lit = "Graph Literacy", Numeracy = "Numeracy")
graph_text <- data.frame(measurement = 25, skew_count = 2, lab = 'r = -0.20, p = 0.004',
cognition=factor('graph_lit', levels = c('graph_lit', 'Numeracy')))
num_text <- data.frame(measurement = 5, skew_count = 2, lab = 'r = -0.20, p = 0.003',
cognition=factor('Numeracy', levels = c('graph_lit', 'Numeracy')))
pdf('figs/cognitive_poster.pdf', width = 7, height = 7)
ggplot(d2, aes(measurement, skew_count, color = cognition, fill = cognition)) +
geom_jitter(size=1, alpha=0.2, width=0.3) +
geom_smooth(method=lm) +
scale_fill_brewer(name='Strategy', palette="Set1") +
scale_color_brewer(name='Strategy', palette="Set1") +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Cognitive Measurement') + ylab('Skew Count') + ggtitle('Cognitive Ability') +
facet_grid(. ~ cognition, scales="free_x", labeller=labeller(cognition = labels)) +
geom_text(data = graph_text, label = 'r = -0.2 [-0.32, -0.06]') +
geom_text(data = num_text, label = 'r = -0.2 [-0.33, -0.07]') + theme(legend.position='none')
dev.off()
# graph real world
pdf('figs/realworld_poster.pdf', width = 7, height = 7)
ggplot(dt, aes(high_pressure, skew_count)) +
geom_jitter(size=1, alpha=0.2, width=0.3, color = '#009900') +
geom_smooth(method=lm, color = '#009900', fill = '#009900') +
scale_y_continuous(breaks = c(3, 6, 9)) + theme_minimal() + custom_plot +
xlab('Degree of Endorsementt') + ylab('Skew Count') + ggtitle('Real World Relationships') +
annotate('text', x = 3, y = 1, label = 'r = -0.16 [-0.29, -0.02]', color = '#009900', size = 8)
dev.off()
# load required packages
library(here)
library(ggplot2)
library(gdata)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
source(here('scr', 'multiplot.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude)
# age effects on acceptance rates
ggplot(d1, aes(Age, accept, colour = deg_skew, fill = deg_skew)) + geom_smooth(method=lm) +
theme(legend.position = 'top') + facet_grid(magnitude ~ valence)
# create summary - main effect of degree of skewness
d2 <- summarySE(data=d1, measurevar = 'accept', groupvars='deg_skew')
p1 <- ggplot(d2, aes(deg_skew, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme_minimal() + ylab('Acceptance Rate')  + expand_limits(y=c(-.06, 1)) +
theme(legend.position = 'none') + scale_fill_discrete(name = 'Skewness') +
theme(axis.text.x=element_blank(), axis.title.x=element_blank(), legend.justification = c(1,1), legend.position=c(1,1),) #+ xlab('Degree of Skewness')
# create summary - add interaction with valence of gamble
d3 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence','deg_skew'))
p4 <- ggplot(d3, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - add interaction with magnitude of gamble
d4 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('magnitude','deg_skew'))
p5 <- ggplot(d4, aes(magnitude, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - 3 way interaction
d5 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence', 'magnitude', 'deg_skew'))
ggplot(d5, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top') + facet_wrap(~ magnitude)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('loss.5', 'loss.0.5', 'neutral.0', 'gain.0.5', 'gain.5'))
levels(d1$magval)[1] <- '-$5.00'
levels(d1$magval)[2] <- '-$0.50'
levels(d1$magval)[3] <- '$0.00'
levels(d1$magval)[4] <- '+$0.50'
levels(d1$magval)[5] <- '+$5.00'
d6 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('magval', 'deg_skew'))
p2 <- ggplot(d6, aes(magval, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
xlab('Valence by Magnitude Interaction') +theme_minimal() + theme(axis.title.y = element_blank(), legend.position = 'none') +
expand_limits(y=1)
p3 <- multiplot(p1, p2, layout = matrix(c(1,2,2,2), nrow=1, byrow=TRUE))
p1 <- ggplot(d2, aes(deg_skew, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme_minimal() + ylab('Acceptance Rate')  + expand_limits(y=c(-.06, 1)) +
scale_fill_discrete(name = 'Skewness') +
theme(axis.text.x=element_blank(), axis.title.x=element_blank(), legend.justification = c(1,1), legend.position=c(1,1),) #+ xlab('Degree of Skewness')
p3 <- multiplot(p1, p2, layout = matrix(c(1,2,2,2), nrow=1, byrow=TRUE))
source(here::here('scr', 'pairedttable.R'))
# load source functions
source(here('scr', 'isolate_skew.R'))
# load required packages
library(here)
library(ggplot2)
library(tidyr)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
View(score_avi)
View(score_avi)
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs)
#last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict)
View(d0)
View(d0)
source('~/github/boundSkew1/09_individual_differences.R', echo=TRUE)
