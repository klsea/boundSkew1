t1[1,]<- c('', '', 'Baseline', 'Model 1', 'Model 2', 'Model 3', 'Model 4')
t1[2,]<- c('Predictor', 'Comparison', '', '', '', '', '')
t1[,1]<- c('', 'Predictor', 'Degree of Skew', '', '', 'Valence', 'Magnitude', 'Valence x Magnitude', 'Age', 'Fit')
View(t1)
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric', '','', '','', '' )
View(t1)
summary(m1)
t1 <- matrix(nrow=11,ncol=7)
t1[1,]<- c('', '', 'Baseline', 'Model 1', 'Model 2', 'Model 3', 'Model 4')
t1[2,]<- c('Predictor', 'Comparison', '', '', '', '', '')
t1[,1]<- c('', 'Predictor', 'Degree of Skew', '', '', 'Valence', '', 'Magnitude', 'Valence x Magnitude', 'Age', 'Fit')
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric', 'Gain > Neutral','Loss > Neutral', '','', '' )
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric', 'Gain > Neutral','Loss > Neutral', '', '','', '' )
View(t1)
# Create table for manuscript
t1 <- matrix(nrow=12,ncol=7)
t1[1,]<- c('', '', 'Baseline', 'Model 1', 'Model 2', 'Model 3', 'Model 4')
t1[2,]<- c('Predictor', 'Comparison', '', '', '', '', '')
t1[,1]<- c('', 'Predictor', 'Degree of Skew', '', '', 'Valence', '', 'Magnitude','', 'Valence x Magnitude', 'Age', 'Fit')
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric', 'Gain > Neutral','Loss > Neutral', '$0.5 > $0', '$5 > $0','', '' )
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric', 'Gain > Neutral','Loss > Neutral', '$0.5 > $0', '$5 > $0','', '','' )
View(t1)
summary(m3)
# Create table for manuscript
t1 <- matrix(nrow=16,ncol=7)
t1[1,]<- c('', '', 'Baseline', 'Model 1', 'Model 2', 'Model 3', 'Model 4')
t1[2,]<- c('Predictor', 'Comparison', '', '', '', '', '')
t1[,1]<- c('', 'Predictor', 'Degree of Skew', '', '', 'Valence', '', 'Magnitude','',
'Valence x Magnitude', '', '', '', '', 'Age', 'Fit')
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric',
'Gain > Neutral','Loss > Neutral', '$0.5 > $0', '$5 > $0','Lose $5 > Neutral $0',
'$Lose $0.5 > Neutral $0', 'Gain $0.5 > Neutral $0','Gain $5 > Neutral $0', '' )
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric',
'Gain > Neutral','Loss > Neutral', '$0.5 > $0', '$5 > $0','Lose $5 > Neutral $0',
'$Lose $0.5 > Neutral $0', 'Gain $0.5 > Neutral $0','Gain $5 > Neutral $0', '','' )
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric',
'Gain > Neutral','Loss > Neutral', '$0.5 > $0', '$5 > $0','Lose $5 > Neutral $0',
'$Lose $0.5 > Neutral $0', 'Gain $0.5 > Neutral $0','Gain $5 > Neutral $0', '','' ,'')
View(t1)
# Create table for manuscript
t1 <- matrix(nrow=15,ncol=7)
t1[1,]<- c('', '', 'Baseline', 'Model 1', 'Model 2', 'Model 3', 'Model 4')
t1[2,]<- c('Predictor', 'Comparison', '', '', '', '', '')
t1[,1]<- c('', 'Predictor', 'Degree of Skew', '', '', 'Valence', '', 'Magnitude','',
'Valence x Magnitude', '', '', '', 'Age', 'Fit')
t1[,2]<- c('', 'Comparison', 'Weak > Symmetric', 'Moderate > Symmetric', 'Strong > Symmetric',
'Gain > Neutral','Loss > Neutral', '$0.5 > $0', '$5 > $0','Lose $5 > Neutral $0',
'$Lose $0.5 > Neutral $0', 'Gain $0.5 > Neutral $0','Gain $5 > Neutral $0', '','')
View(m4)
View(t1)
b1$estimate
summary(b1)
b1
b1[1]
b1
summary(b1)
summary(b1)$
estimates
summary(m1)
View(t1)
tab_model(b1)
# load required packages
library(here)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
b1 <- readRDS(here::here('output', 'baseline.RDS'))
View(b1)
summary(b1)
# load required packages
library(here)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
b1 <- readRDS(here::here('output', 'baseline.RDS'))
tab_model(b1)
m1 <- readRDS(here::here('output', 'm1.RDS'))
tab_model(b1, m1)
m3 <- readRDS(here::here('output', 'm3.RDS'))
m4 <- readRDS(here::here('output', 'm4.RDS'))
tab_model(b1, m1, m2, m3, m4)
m2 <- readRDS(here::here('output', 'm2.RDS'))
m3 <- readRDS(here::here('output', 'm3.RDS'))
tab_model(b1, m1, m2, m3, m4)
source('~/github/boundSkew1/03_model_skew.R', echo=TRUE)
# Create table for manuscript
t1 <- tab_model(b1, m1, m2, m3, m4)
View(t1)
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
source('../02_demographic_data.R')
hist(dt$Age)
pie(table(dt$Gender))
knitr::kable(table(dt$Gender)) %>% kable_styling(full_width = F)
pie(table(dt$Race))
knitr::kable(table(dt$Race)) %>% kable_styling(full_width = F)
pie(table(dt$Education))
knitr::kable(table(dt$Education)) %>% kable_styling(full_width = F)
# load required packages
library(here)
library(Hmisc)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
source(here('scr', 'corrTableCI.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
source('~/github/boundSkew1/11_age_fu.R', echo=TRUE)
View(d1)
# limit to only participants in the EV = 0 condition
d1[which(d1$magnitude == 0),]
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
# Aging Follow-Up Analyses
# Create 4.3.20  KLS
# load required packages
library(here)
library(Hmisc)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
source(here('scr', 'corrTableCI.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
library(lme4)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
View(d2)
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
View(d2)
d2$ID <- factor(d2$ID)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
View(d2)
# Aging Follow-Up Analyses
# Create 4.3.20  KLS
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
source(here('scr', 'corrTableCI.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
d2$ID <- factor(d2$ID)
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
saveRDS(b1.1, here::here('output', 'baseline.RDS'))
View(d2)
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
View(d2)
d2$ID <- factor(d2$ID)
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
View(d2)
# load required packages
library(here)
library(lme4)
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'clean_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
View(d1)
# Aging Follow-Up Analyses
# Create 4.3.20  KLS
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'clean_skew.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
View(d1)
# load required packages
library(here)
# load required packages
library(here)
# load required packages
library(here)
library(lme4)
library(gdata)
library(tidyr)
library(rlist)
# load source functions
source(here::here('scr', 'isolate_skew.R'))
source(here::here('scr', 'clean_skew.R'))
source(here::here('scr', 'SummarySE.R'))
source(here::here('scr', 'pairedttable.R'))
# load data
dt <- read.csv(here::here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
d2$ID <- factor(d2$ID)
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
## boundary fit - add age
m1 <- glmer(accept ~ deg_skew + Age (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
View(d2)
## boundary fit - add age
m1 <- glmer(accept ~ deg_skew + Age + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
## boundary fit - add age
m1 <- glmer(accept ~ deg_skew * Age + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
hist(d2$Age)
View(d2)
skewness(d2$Age)
install.packages(e1071)
install.packages('e1071')
library(e1071)
skewness(d2$Age)
# scale and center age
d2$Age <- scale(d2$Age)
source('~/github/boundSkew1/11_age_fu.R', echo=TRUE)
hist(d2$Age)
# Aging Follow-Up Analysis
# 4.3.20 KLS
# load required packages
library(here)
library(lme4)
library(gdata)
library(tidyr)
library(rlist)
# load source functions
source(here::here('scr', 'isolate_skew.R'))
source(here::here('scr', 'clean_skew.R'))
source(here::here('scr', 'SummarySE.R'))
source(here::here('scr', 'pairedttable.R'))
# set hard-coded variables
# load data
dt <- read.csv(here::here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
d2$ID <- factor(d2$ID)
mean(d2$Age)
# Aging Follow-Up Analysis
# 4.3.20 KLS
# load required packages
library(here)
library(lme4)
library(gdata)
library(tidyr)
library(rlist)
# load source functions
source(here::here('scr', 'isolate_skew.R'))
source(here::here('scr', 'clean_skew.R'))
source(here::here('scr', 'SummarySE.R'))
source(here::here('scr', 'pairedttable.R'))
# set hard-coded variables
# load data
dt <- read.csv(here::here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
d2$ID <- factor(d2$ID)
ev0_m_age <- mean(d2$Age)
ev0_hist_age <- hist(d2$Age)
# scale and center age
d2$Age <- scale(d2$Age)
View(d2)
ev0_hist_age <- hist(d2$Age[which(d2$deg_skew == 'Symmetric'),])
source('~/github/boundSkew1/11_age_fu.R', echo=TRUE)
# load required packages
library(here)
library(lme4)
library(gdata)
library(tidyr)
library(rlist)
# load source functions
source(here::here('scr', 'isolate_skew.R'))
source(here::here('scr', 'clean_skew.R'))
source(here::here('scr', 'SummarySE.R'))
source(here::here('scr', 'pairedttable.R'))
# load data
dt <- read.csv(here::here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
d2$ID <- factor(d2$ID)
ev0_m_age <- mean(d2$Age)
ev0_hist_age <- hist(d2$Age[which(d2$deg_skew == 'Symmetric'),])
# scale and center age
d2$Age <- scale(d2$Age)
ev0_hist_age <- hist(d2[which(d2$deg_skew == 'Symmetric'),]$Age)
# Aging Follow-Up Analysis
# 4.3.20 KLS
# load required packages
library(here)
library(lme4)
library(gdata)
library(tidyr)
library(rlist)
# load source functions
source(here::here('scr', 'isolate_skew.R'))
source(here::here('scr', 'clean_skew.R'))
source(here::here('scr', 'SummarySE.R'))
source(here::here('scr', 'pairedttable.R'))
# set hard-coded variables
# load data
dt <- read.csv(here::here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('neutral.0', 'loss.5', 'loss.0.5', 'gain.0.5', 'gain.5'))
# limit to only participants in the EV = 0 condition
d2 <- d1[which(d1$magnitude == 0),]
d2$ID <- factor(d2$ID)
ev0_m_age <- mean(d2$Age)
ev0_hist_age <- hist(d2[which(d2$deg_skew == 'Symmetric'),]$Age)
# scale and center age
d2$Age <- scale(d2$Age)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
## boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
## boundary fit - add age
m1 <- glmer(accept ~ deg_skew * Age + (1 | ID), data = d2, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
View(d2)
# compare symmetric to 25%/75% gamble
d2[which(d2$gamble == 'X0_25_75' | d2$gamble == 'X0_50)50'), ]
# compare symmetric to 25%/75% gamble
d3 <- d2[which(d2$gamble == 'X0_25_75' | d2$gamble == 'X0_50)50'), ]
View(d3)
# compare symmetric to 25%/75% gamble
d3 <- d2[which(d2$gamble == 'X0_25_75' & d2$gamble == 'X0_50)50'), ]
# compare symmetric to 25%/75% gamble
d3 <- d2[which(d2$gamble == 'X0_25_75' | d2$gamble == 'X0_50_50'), ]
View(d3)
