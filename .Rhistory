d0 <- isolate_skew(dt,c(1,2),70:75)
colnames(d0) <- c('ID', 'Age', 'gut', 'math', 'lose.likely', 'lose.money', 'win.likely', 'lose.likely')
d0$diffstrategy <- d0$math - d0$gut
ggplot(d0, aes(Age, diffstrategy)) + geom_point()
colnames(d0) <- c('ID', 'Age', 'gut', 'math', 'win.money', 'lose.money', 'win.likely', 'lose.likely')
d0$diffstrategy <- d0$math - d0$gut
ggplot(d0, aes(Age, diffstrategy)) + geom_point()
ggplot(d0, aes(Age, diffstrategy)) + geom_point() + geom_smooth(method=lm)
ggplot(d0, aes(Age, diffstrategy)) + geom_point() + geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggplot(d0, aes(Age, diffstrategy)) + geom_point() + geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggplot(d0, aes(Age, diffstrategy)) + geom_point() + geom_smooth(method = 'lm')
ggplot(d0, aes(Age, diffstrategy)) + geom_point() + geom_smooth(method = 'lm') +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggplot(d0, aes(Age, diffstrategy)) + geom_point() + geom_smooth(method = 'lm') +
geom_smooth(method = "lm", formula = y ~ x + I(x^2), aes(color = 'red', fill = 'red'))
ggplot(d0, aes(Age, diffstrategy)) + geom_point() + geom_smooth(method = 'lm', fill = 'blue') +
geom_smooth(method = "lm", formula = y ~ x + I(x^2), aes(color = 'red', fill = 'red'))
# load required packages
library(here)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
View(clean_skew)
d1 <- clean_skew2(d0)
source(here('scr', 'clean_skew.R'))
d1 <- clean_skew2(d0)
View(d1)
subs <- unique(d1$ID)
subs
s = 1
d2 <- d1[d1$ID == s]
d2 <- d1[which(d1$ID == s),]
View(d2)
#recode response to acceptance
d1$accept <- d1$response - 1
d2 <- d1[which(d1$ID == s),]
View(d0)
View(d2)
# calculate individual difference score - count
dt3 <- matrix(nrows = len(subs), ncol = 2)
# calculate individual difference score - count
dt3 <- matrix(nrow = len(subs), ncol = 2)
# calculate individual difference score - count
dt3 <- matrix(nrow = length(subs), ncol = 2)
View(dt3)
# calculate individual difference score - count
d3 <- matrix(nrow = length(subs), ncol = 2)
sum(d2$response)
View(d2)
d3[s] <- sum(d2$accept)
View(d3)
for (s in subjects) {
d2 <- d1[which(d1$ID == s),]
d3[s,1] <- s
d3[s,2] <- sum(d2$accept)
}
for (s in subs) {
d2 <- d1[which(d1$ID == s),]
d3[s,1] <- s
d3[s,2] <- sum(d2$accept)
}
View(d3)
cor(d2$deg_skew, d2$accept)
View(d2)
d4 <- d2[,c(6,9)]
View(d4)
cor(d4)
# calculate individual difference score - count
d3 <- matrix(nrow = length(subs), ncol = 2)
for (s in subs) {
d2 <- d1[which(d1$ID == s),]
d3[s,1] <- s
d3[s,2] <- sum(d2$accept)
}
View(dt3)
rm(dt3)
View(d3)
colnames(d3) <- c('ID', 'skew_count')
View(d3)
write.csv(here('data', 'skew_count.csv'))
write.csv(d3, here('data', 'boundSkew1_counts.csv'))
# load required packages
library(here)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'skew_count.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
View(d0)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
View(d1)
# add skew count variable
d2 <- skew_count(d1)
source(here('scr', 'skew_count.R'))
source(here('scr', 'count_skew.R'))
# add skew count variable
d2 <- count_skew(d1)
d2
View(count_skew)
data <- d1
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
dt <- matrix(nrow = length(subs), ncol = 2)
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- sum(d0$accept)
}
View(dt)
colnames(dt) <- c('ID', 'skew_count')
View(dt)
count_skew <- function(data) {
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
dt <- matrix(nrow = length(subs), ncol = 2)
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- sum(d0$accept)
}
colnames(dt) <- c('ID', 'skew_count')
return(dt)
}
# add skew count variable
d2 <- count_skew(d1)
View(d2)
View(d2)
sum(d2$skew_count)
View(d2)
d2[which(d2$skew_count == 10),]
dt <- as.data.frame(dt)
count_skew <- function(data) {
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
dt <- matrix(nrow = length(subs), ncol = 2)
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- sum(d0$accept)
}
colnames(dt) <- c('ID', 'skew_count')
dt <- as.data.frame(dt)
return(dt)
}
# add skew count variable
d2 <- count_skew(d1)
d2[which(d2$skew_count == 10),]
length(d2[which(d2$skew_count == 10),])
length(d2[which(d2$skew_count == 10),],2)
d3 <- d2[which(d2$skew_count == 10),]
View(d3)
d4 <- d2[which(d2$skew_count == 0),]
View(d4)
hist(d2$skew_count)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram()
View(d0)
count_skew <- function(data) {
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
dt <- matrix(nrow = length(subs), ncol = 4)
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
colnames(dt) <- c('ID', 'skew_count')
dt <- as.data.frame(dt)
return(dt)
}
# add skew count variable
d2 <- count_skew(d1)
View(d2)
count_skew <- function(data) {
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
dt <- matrix(nrow = length(subs), ncol = 4)
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
colnames(dt) <- c('ID', 'valence', 'magnitude', 'skew_count')
dt <- as.data.frame(dt)
return(dt)
}
# add skew count variable
d2 <- count_skew(d1)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram()
View(d2)
View(d2)
View(d2)
# add skew count variable
d2 <- as.data.frame(count_skew(d1))
d2$ID
d2$valence
d2$skew_count
View(d2)
View(d2)
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
dt <- matrix(nrow = length(subs), ncol = 4)
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
colnames(dt) <- c('ID', 'valence', 'magnitude', 'skew_count')
dt <- as.data.frame(dt)
dt$skew_count <- as.integer(dt$skew_count)
View(dt)
# add skew count variable
d2 <-count_skew(d1)
rm(d2)
# add skew count variable
d2 <-count_skew(d1)
View(d2)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram()
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram(stat='count')
View(d2)
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
dt <- matrix(nrow = length(subs), ncol = 4)
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
colnames(dt) <- c('ID', 'valence', 'magnitude', 'skew_count')
dt <- as.data.frame(dt)
View(dt)
#dt <- matrix(nrow = length(subs), ncol = 4)
dt <- data.frame(ID=factor(), valence=factor(), magnitude=factor(), skew_count=integer())
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
dt
#dt <- matrix(nrow = length(subs), ncol = 4)
dt <- data.frame(ID=character(), valence=factor(), magnitude=factor(), skew_count=integer())
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
dt
View(dt)
#dt <- matrix(nrow = length(subs), ncol = 4)
dt <- data.frame(ID=character(), valence=character(), magnitude=character(), skew_count=integer())
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
dt
dt <- matrix(nrow = length(subs), ncol = 4)
#dt <- data.frame(ID=character(), valence=character(), magnitude=character(), skew_count=integer())
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
dt
dt <- data.frame(dt)
View(dt)
colnames(dt) <- c('ID', 'valence', 'magnitude', 'skew_count')
View(dt)
is.data.frame(dt)
# add skew count variable
d2 <-count_skew(d1)
source(here('scr', 'count_skew.R'))
# add skew count variable
d2 <-count_skew(d1)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram(stat='count')
d2$skew_count <- as.integer(d2$skew_count)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram(stat='count')
View(d2)
View(data)
# load required packages
library(here)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
d2$skew_count <- as.integer(d2$skew_count)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram(stat='count')
library(ggplot2)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram(stat='count')
View(d2)
# add skew count variable
d2 <-count_skew(d1)
View(d2)
d2$skew_count <- as.numeric(d2$skew_count)
View(d2)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram(stat='count')
View(d2)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
d2$skew_count <- as.numeric(d2$skew_count)
View(d2)
View(count_skew)
data = d1
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
dt <- matrix(nrow = length(subs), ncol = 4)
View(dt)
d0 <- data[which(data$ID == s),]
View(d0)
d0 <- data[which(data$ID == s),]
s = 2
d0 <- data[which(data$ID == s),]
View(d0)
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
View(dt)
View(d2)
View(d2)
View(dt)
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
View(dt)
View(d0)
d0 <- data[which(data$ID == s),]
View(d0)
s = 3
d0 <- data[which(data$ID == s),]
View(d0)
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
View(dt)
View(data)
View(d2)
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
View(dt)
s = 1
d0 <- data[which(data$ID == s),]
View(d0)
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
View(dt)
View(d2)
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
d2$skew_count <- as.numeric(d2$skew_count)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram(stat='count')
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
View(d1)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
d2$skew_count <- as.numeric(d2$skew_count)
View(d2)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
View(d2)
# examine distribution
ggplot(d2, aes(skew_count)) + geom_histogram(stat='count')
d2$skew_count_f <- as.factor(d2$skew_count)
# examine distribution
ggplot(d2, aes(skew_count_f)) + geom_histogram(stat='count')
d2$skew_count_f <- as.factor(d2$skew_count, levels= ('0','1','2','3','4','5','6','7','8','9','10'))
# examine distribution
ggplot(d2, aes(skew_count_f)) + geom_histogram(stat='count')
d2$skew_count_f <- ordered(d2$skew_count, levels= ('0','1','2','3','4','5','6','7','8','9','10'))
# examine distribution
ggplot(d2, aes(skew_count_f)) + geom_histogram(stat='count')
levels(d2$skew_count_f)
# examine distribution
ggplot(d2, aes(skew_count_f)) + geom_histogram(stat='count')
# individual difference measures skew
# 10.29.19 KLS
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
d2$skew_count_f <- ordered(d2$skew_count,
levels= ('0','1','2','3','4','5','6','7','8','9','10'))
View(d2)
d2$skew_count_f <- ordered(d2$skew_count,
levels= ('0','1','2','3','4','5','6','7','8','9','10'))
d2$skew_count_f <- ordered(d2$skew_count, levels= ('0','1','2','3','4','5','6','7','8','9','10'))
d2$skew_count_f <- ordered(d2$skew_count, levels= c('0','1','2','3','4','5','6','7','8','9','10'))
# examine distribution
ggplot(d2, aes(skew_count_f)) + geom_histogram(stat='count')
# examine distribution
ggplot(d2, aes(skew_count_f, fill = valence)) + geom_histogram(stat='count')
# examine distribution
ggplot(d2, aes(skew_count_f, fill = valence)) + geom_histogram(stat='count', binwidth=.5, position="dodge")
# examine distribution
ggplot(d2, aes(skew_count_f, fill = magnitude)) + geom_histogram(stat='count', binwidth=.5, position="dodge")
d2$magval <- interaction(d2$valence, d2$magnitude)
View(d2)
# examine distribution
ggplot(d2, aes(skew_count_f, fill = magval)) + geom_histogram(stat='count', binwidth=.5, position="dodge")
