library(here)
library(ggplot2)
library(Hmisc)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'SummarySE.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate graph literacy
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("bar charts", qs)
last <- grep("newspapers", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# graph literacy score
d1 <- score_graph_lit(d0)
rm(d0)
# isolate numeracy
first <- grep("six-sided", qs)
last <- grep("10,000 doctors", qs)
d2 <- isolate_skew(dt,c(1,2), first:last)
# score numeracy
ans_key <- create_num_answer_key()
d3 <- as.data.frame(score_num(d2, ans_key))
rm(ans_key, d2)
# separate skew
d4 <- isolate_skew(dt,c(1,2),10:69)
d5 <- clean_skew2(d4)
# add skew count variable
d6 <-count_skew(d5)
rm(d4, d5)
View(d6)
# load required packages
library(here)
library(ggplot2)
library(Hmisc)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'SummarySE.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# isolate graph literacy
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("bar charts", qs)
last <- grep("newspapers", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# graph literacy score
d1 <- score_graph_lit(d0)
rm(d0)
# isolate numeracy
first <- grep("six-sided", qs)
last <- grep("10,000 doctors", qs)
d2 <- isolate_skew(dt,c(1,2), first:last)
# score numeracy
ans_key <- create_num_answer_key()
d3 <- as.data.frame(score_num(d2, ans_key))
rm(ans_key, d2)
# separate skew
d4 <- isolate_skew(dt,c(1,2),10:69)
View(d4)
d5 <- clean_skew2(d4)
View(d5)
# add skew count variable
d6 <-count_skew(d5)
View(d6)
data = d5
# calculate individual difference score - count number of skew gambles acceptances
subs <- unique(data$ID)
data <- data[which(data$deg_skew != 0),]
View(data)
dt <- matrix(nrow = length(subs), ncol = 4)
for (s in subs) {
d0 <- data[which(data$ID == s),]
dt[s,1] <- s
dt[s,2] <- d0$valence[1]
dt[s,3] <- d0$magnitude[1]
dt[s,4] <- sum(d0$accept)
}
dt <- data.frame(dt)
colnames(dt) <- c('ID', 'valence', 'magnitude', 'skew_count')
return(dt)
View(dt)
source('~/github/boundSkew1/10_indiv_diff_numeracy_sgl.R', echo=TRUE)
View(d8)
s1_corr
# models
d8$magval <- interaction(d8$magnitude, d8$valence)
m1 <- lm(skew_count ~ hap + magval, data = d8)
summary(m1)
m1 <- lm(skew_count ~ graph_lit + magval, data = d8)
summary(m1)
d8$skew_count <- as.integer(as.character(d8$skew_count))
m1 <- lm(skew_count ~ graph_lit + magval, data = d8)
summary(m1)
m2 <- lm(skew_count ~ Numeracy + magval, data = d8)
summary(m2)
# correlations
s1_corr <- rcorr(as.matrix(d8[c(2,5:7)]))
saveRDS(s1_corr, here('output', 's1_corr4.RDS'))
s1_corr
source('~/github/boundSkew1/05_graph_strategy.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs) # use if full measure: last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict) # use if full measure: d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
# Individual differences analysis
# Create 11.25.19 KLS from prior scripts
# load required packages
library(here)
library(Hmisc)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
rm(d0, d1)
# separate strategy
d0 <- isolate_skew(dt,c(1,2),70:75)
colnames(d0) <- c('ID', 'Age', 'gut', 'math', 'win.money', 'lose.money', 'win.likely', 'lose.likely')
# merge skew and strategy data frames
d3 <- merge(d2,d0, by = 'ID')
d3 <- d3[c(1,5,2:4,6:11)]
d3$skew_count <- as.integer(as.character(d3$skew_count))
rm(d0,d2)
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs) # use if full measure: last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict) # use if full measure: d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
d1 <- score_avi(d0)
source(here('scr', 'isolate_measure.R'))
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict) # use if full measure: d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
d1 <- score_avi(d0)
# merge affect to skew+strategy data frame
d3 <- merge(d3, d1, by = 'ID')
View(d3)
# merge affect to skew+strategy data frame
d3 <- merge(d3, d1, by = c('ID', 'Age'))
# Individual differences analysis
# Create 11.25.19 KLS from prior scripts
# load required packages
library(here)
library(Hmisc)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
rm(d0, d1)
# separate strategy
d0 <- isolate_skew(dt,c(1,2),70:75)
colnames(d0) <- c('ID', 'Age', 'gut', 'math', 'win.money', 'lose.money', 'win.likely', 'lose.likely')
# merge skew and strategy data frames
d3 <- merge(d2,d0, by = 'ID')
d3 <- d3[c(1,5,2:4,6:11)]
d3$skew_count <- as.integer(as.character(d3$skew_count))
rm(d0,d2)
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs) # use if full measure: last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict) # use if full measure: d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
d1 <- score_avi(d0)
View(d3)
# merge affect to skew+strategy data frame
d4 <- merge(d3, d1, by = c('ID', 'Age'))
View(d4)
# isolate graph literacy
first <- grep("bar charts", qs)
last <- grep("newspapers", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# graph literacy score
d1 <- score_graph_lit(d0)
rm(d0)
rm(d1,d3)
# isolate graph literacy
first <- grep("bar charts", qs)
last <- grep("newspapers", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# graph literacy score
d1 <- score_graph_lit(d0)
rm(d0)
# isolate numeracy
first <- grep("six-sided", qs)
last <- grep("10,000 doctors", qs)
d2 <- isolate_skew(dt,c(1,2), first:last)
# score numeracy
ans_key <- create_num_answer_key()
d3 <- as.data.frame(score_num(d2, ans_key))
rm(ans_key, d2)
# merge cognitive to skew+strategy+affect data frame
d5 <- merge(d4, d1, by = c('ID', 'Age'))
View(d5)
d6 <- merge(d5, d3, by c('ID', 'Age'))
rm(d4, d1,d5,d3)
# Individual differences analysis
# Create 11.25.19 KLS from prior scripts
# load required packages
library(here)
library(Hmisc)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'isolate_measure.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'count_skew.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dict <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew2(d0)
#recode response to acceptance
d1$accept <- d1$response - 1
# add skew count variable
d2 <-count_skew(d1)
rm(d0, d1)
# separate strategy
d0 <- isolate_skew(dt,c(1,2),70:75)
colnames(d0) <- c('ID', 'Age', 'gut', 'math', 'win.money', 'lose.money', 'win.likely', 'lose.likely')
# merge skew and strategy data frames
d3 <- merge(d2,d0, by = 'ID')
d3 <- d3[c(1,5,2:4,6:11)]
d3$skew_count <- as.integer(as.character(d3$skew_count))
rm(d0,d2)
# isolate AVI data
Sys.setlocale('LC_ALL','C')
qs <- as.character(dict$Question)
first <- grep("Enthusiastic", qs)
last <- grep("Lonely", qs) # use if full measure: last <- grep("Serene", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# add labels to AVI data
d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Lonely", dict) # use if full measure: d0 <- add_correct_avi_labels(d0, "Enthusiastic", "Serene", dict)
d1 <- score_avi(d0)
# merge affect to skew+strategy data frame
d4 <- merge(d3, d1, by = c('ID', 'Age'))
rm(d1,d3)
# isolate graph literacy
first <- grep("bar charts", qs)
last <- grep("newspapers", qs)
d0 <- isolate_skew(dt,c(1,2), first:last)
# graph literacy score
d1 <- score_graph_lit(d0)
rm(d0)
# isolate numeracy
first <- grep("six-sided", qs)
last <- grep("10,000 doctors", qs)
d2 <- isolate_skew(dt,c(1,2), first:last)
# score numeracy
ans_key <- create_num_answer_key()
d3 <- as.data.frame(score_num(d2, ans_key))
rm(ans_key, d2)
# merge cognitive to skew+strategy+affect data frame
d5 <- merge(d4, d1, by = c('ID', 'Age'))
d6 <- merge(d5, d3, by = c('ID', 'Age'))
rm(d4, d1,d5,d3)
# identify begining and end of
d1 <- isolate_skew(dt, 1, grep('Q173', colnames(dt)):grep('Q27', colnames(dt)))
# investment & fraud
d2 <- data.frame(d1$ID, (d1$Q173 - 2)*-1, d1$Q177, d1[11:14])
colnames(d2) <- c('ID', 'lost_invest', 'why_lost', 'detect_fraud', 'likely_fraud', 'high_pressure', 'avoid_fraud')
# merge real world with skew+strategy+affect+cog
d7 <- merge(d6, d2, by = c('ID', 'Age'))
# merge real world with skew+strategy+affect+cog
d7 <- merge(d6, d2, by = 'ID')
View(d7)
rm(d1,d2,d6)
# correlations
end <- ncol(d7)
# isolate numeracy
first <- grep("six-sided", qs); last <- grep("10,000 doctors", qs)
# correlations
end <- ncol(d7)
s1_corr <- rcorr(as.matrix(d3[5:end]))
s1_corr <- rcorr(as.matrix(d7[5:end]))
View(s1_corr)
s1_corr
saveRDS(s1_corr, here('output', 's1_corr.RDS'))
# models - strategy
d7$magval <- interaction(d7$magnitude, d7$valence)
m1 <- lm(skew_count ~ gut + magval, data = d7)
summary(m1)
m2 <- lm(skew_count ~ win.money + magval, data = d7)
summary(m2)
m3 <- lm(skew_count ~ lose.money + magval, data = d7)
summary(m3)
m4 <- lm(skew_count ~ lose.likely + magval, data = d7)
summary(m4)
m5 <- lm(skew_count ~ math + magval, data = d7)
summary(m5)
m6 <- lm(skew_count ~ win.likely + magval, data = d7)
summary(m6)
# models - affect
m7 <- lm(skew_count ~ hap + magval, data = d7)
summary(m7)
m8 <- lm(skew_count ~ lap + magval, data = d7)
summary(m8)
m9 <- lm(skew_count ~ la + magval, data = d7)
summary(m9)
m10 <- lm(skew_count ~ lan + magval, data = d7)
summary(m10)
m11 <- lm(skew_count ~ han + magval, data = d7)
summary(m11)
m12 <- lm(skew_count ~ ha + magval, data = d7)
summary(m12)
# models - cognitive
d7$skew_count <- as.integer(as.character(d7$skew_count))
m13 <- lm(skew_count ~ graph_lit + magval, data = d7)
summary(m13)
m14 <- lm(skew_count ~ Numeracy + magval, data = d7)
summary(m14)
# models - real world
d7$skew_count <- as.numeric(as.character(d7$skew_count))
m15 <- lm(skew_count ~ lost_invest + magval, data = d7)
summary(m15)
m16 <- lm(skew_count ~ detect_fraud + magval, data = d7)
summary(m16)
m17 <- lm(skew_count ~ likely_fraud + magval, data = d7)
summary(m17)
m18 <- lm(skew_count ~ high_pressure + magval, data = d7)
summary(m18)
source('~/github/boundSkew1/09_individual_differences.R', echo=TRUE)
View(s1_corr)
m1 <- lm(skew_count ~ Age + gut + magval, data = d7)
summary(m1)
+ Age
+ Age
m1 <- lm(skew_count ~ gut + Age + magval, data = d7)
summary(m1)
m2 <- lm(skew_count ~ win.money + Age + magval, data = d7)
summary(m2)
m3 <- lm(skew_count ~ lose.money + Age + magval, data = d7)
summary(m3)
m4 <- lm(skew_count ~ lose.likely + Age + magval, data = d7)
summary(m4)
m5 <- lm(skew_count ~ math + Age + magval, data = d7)
summary(m5)
m6 <- lm(skew_count ~ win.likely + Age + magval, data = d7)
summary(m6)
# models - affect
m7 <- lm(skew_count ~ hap + Age + magval, data = d7)
summary(m7)
m8 <- lm(skew_count ~ lap + Age + magval, data = d7)
summary(m8)
m9 <- lm(skew_count ~ la + Age + magval, data = d7)
summary(m9)
m1 <- readRDS("~/github/boundSkew1/output/m1.RDS")
m1
library(lme4)
install.packages('lme4')
m1 <- readRDS("~/github/boundSkew1/output/m1.RDS")
m1
summary(m1)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
source(here('scr', 'multiplot.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
View(dt)
View(isolate_skew)
View(dt)
head(dt[69])
library(here)
library(here)
library(here)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
source(here('scr', 'multiplot.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude)
# age effects on acceptance rates
ggplot(d1, aes(Age, accept, colour = deg_skew, fill = deg_skew)) + geom_smooth(method=lm) +
theme(legend.position = 'top') + facet_grid(magnitude ~ valence)
# create summary - main effect of degree of skewness
d2 <- summarySE(data=d1, measurevar = 'accept', groupvars='deg_skew')
p1 <- ggplot(d2, aes(deg_skew, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme_minimal() + xlab('Degree of Skewness') + ylab('Acceptance Rate') + expand_limits(y=1) +
guides(fill=FALSE)
# create summary - main effect of degree of skewness
d2 <- summarySE(data=d1, measurevar = 'accept', groupvars='deg_skew')
p1 <- ggplot(d2, aes(deg_skew, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme_minimal() + xlab('Degree of Skewness') + ylab('Acceptance Rate') + expand_limits(y=1) +
guides(fill=FALSE)
p1
# create summary - add interaction with valence of gamble
d3 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence','deg_skew'))
ggplot(d3, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - add interaction with magnitude of gamble
d4 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('magnitude','deg_skew'))
ggplot(d4, aes(magnitude, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - 3 way interaction
d5 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence', 'magnitude', 'deg_skew'))
ggplot(d5, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top') + facet_wrap(~ magnitude)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
d1$magval <- drop.levels(d1$magval)
d1$magval <- factor(d1$magval, levels = c('loss.5', 'loss.0.5', 'neutral.0', 'gain.0.5', 'gain.5'))
levels(d1$magval)[1] <- '-$5.00'
levels(d1$magval)[2] <- '-$0.50'
levels(d1$magval)[3] <- '$0.00'
levels(d1$magval)[4] <- '+$0.50'
levels(d1$magval)[5] <- '+$5.00'
d6 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('magval', 'deg_skew'))
p2 <- ggplot(d6, aes(magval, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
scale_fill_discrete(name = 'Degree of Skewness') + xlab('Valence by Magnitude Interaction') +
theme_minimal() +theme(legend.position = 'none', axis.title.y = element_blank()) + expand_limits(y=1)
p2
p3 <- multiplot(p1, p2, layout = matrix(c(1,2,2,2), nrow=1, byrow=TRUE))
# load required packages
library(here)
library(ggplot2)
library(matrixStats)
library(tidyr)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'multiplot.R'))
source(here('scr', 'colorize_variable.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate strategy
d0 <- isolate_skew(dt,c(1,2),70:75)
View(dt)
View(d0)
# load required packages
library(here)
library(ggplot2)
library(matrixStats)
library(tidyr)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'multiplot.R'))
source(here('scr', 'colorize_variable.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate strategy
d0 <- isolate_skew(dt,c(1,2),70:75)
