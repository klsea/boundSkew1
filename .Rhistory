View(dd)
strsplit(dd$Variable[10])
strsplit(dd$Variable[10], '_')
strsplit(dd$Variable[10], '\_')
strsplitas.charcter(dd$Variable[10]), '_')
strsplit(as.charcter(dd$Variable[10]), '_'))
dd$Variable[10]
as.charcter(dd$Variable[10])
strsplit(as.character(dd$Variable[10]), '_'))
strsplit(as.character(dd$Variable[10]), '_')
View(dd)
for [x] in dd$Variable[10:19] {
print(x)
}
for (x) in dd$Variable[10:19] {
print(x)
}
dd$Variable[10:19]
as.character(dd$Variable[10:19])
for (x) in as.character(dd$Variable[10:19]) {
print(x)
}
for (x in as.character(dd$Variable[10:19])) {
print(x)
}
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
}
a
:
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
print(a[1])
}
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
print(a[1][[1]])
}
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
print(a)
}
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
print(a[[1]][1])
}
View(dd)
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
b <- paste0(a[[1]][1], 'EV_', a[[1]][2], '_', a[[1]][3], 'gamble')
print(b)
}
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
b <- paste0(sub('X', '', a[[1]][1]), 'EV_', a[[1]][2], '_', a[[1]][3], 'gamble')
print(b)
}
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
b <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_gamble')
print(b)
}
for (x in as.character(dd$Variable[10:19])) {
a <- strsplit(x, '_')
b <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
print(b)
}
for (x in 1: length(as.character(dd$Variable[10:19]))) {
print(x)
#a <- strsplit(x, '_')
#b <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
for (x in 1: length(as.character(dd$Variable[10:19]))) {
print(x)
y <- as.character(dd$Variable[10:19])))[x]
print(y)
#a <- strsplit(x, '_')
#b <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
y <- as.character(dd$Variable[10:19])[x]
for (x in 1: length(as.character(dd$Variable[10:19]))) {
print(x)
y <- as.character(dd$Variable[10:19])[x]
print(y)
#a <- strsplit(x, '_')
#b <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
c <- rep(NA, 10)
b <- rep(NA, 10)
for (x in 1: length(as.character(dd$Variable[10:19]))) {
print(x)
y <- as.character(dd$Variable[10:19])[x]
print(y)
a <- strsplit(y, '_')
b[x] <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
dd$`Variable Names`[10:19] <- b
View(dd)
dd$Variable[10:19]
a = dd$Variable[10:19]
a
a = as.character(dd$Variable[10:19])
View(dd)
a = 10:19, b = 22:31, c = 34:43, d = 46.55, e = 58:67
a = (10:19)
list(a = (10:19), b = (22:31), c = (34:43), d = 46:55), e = (58:67))
a = (10:19)
list(a = (10:19), b = (22:31), c = (34:43), d = (46:55), e = (58:67))
gambles <- list(a = (10:19), b = (22:31), c = (34:43), d = (46:55), e = (58:67))
print(g)
gambles <- list(a = (10:19), b = (22:31), c = (34:43), d = (46:55), e = (58:67))
for (g in 1:length(gambles)){
print(g)
}
gambles$g
gambles[1]
for (g in 1:length(gambles)){
print(gambles[1])
}
print(gambles[g])
for (g in 1:length(gambles)){
print(gambles[g])
}
print(gambles[g])[1]
print(gambles[g])[[1]]
for (g in 1:length(gambles)){
#print(gambles[g])[[1]]
print(length(gambles[g]))
}
for (g in 1:length(gambles)){
#print(gambles[g])[[1]]
print(length(gambles[g][1]))
}
#print(gambles[g])[[1]]
print(length(gambles[g][[1]]))
b <- rep(NA, length(gambles[g][[1]]))
for (g in 1:length(gambles)){
print(length(gambles[g][[1]]))
b <- rep(NA, length(gambles[g][[1]]))
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(dd$variable[x])
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
pring(x)
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- as.character(dd$Variable[x])
print(y)
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[x]]
z <- as.character(dd$Variable[x])
#print(y)
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[x])
#print(y)
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[y])
print(y)
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[y])
print(z)
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[y])
a <- strsplit(z, '_')
print(a)
}
}
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[y])
a <- strsplit(z, '_')
b[x] <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
print(b)
}
}
for (g in 1:length(gambles)){
)
for (g in 1:length(gambles)){
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[y])
a <- strsplit(z, '_')
b[x] <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
dd$`Variable Names`[gambles[g][[1]] <- b
}
b <- rep(NA, 10)
for (x in 1: length(as.character(dd$Variable[10:19]))) {
print(x)
y <- as.character(dd$Variable[10:19])[x]
print(y)
a <- strsplit(y, '_')
b[x] <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
dd$`Variable Names`[10:19] <- b
View(dd)
gambles[g][[1]
]
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[y])
a <- strsplit(z, '_')
b[x] <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
dd$`Variable Names`[gambles[g][[1]]] <- b
}
View(dd)
View(dd)
dd$`Variable Names`[c(20:21, 33:34, 44:45, 56:57, 68:69)] <- paste0('Catch_', rep(1,10))
View(dd)
dd$`Variable Names`[c(20:21, 33:34, 44:45, 56:57, 68:69)] <- paste0('Catch_', seq(1,10))
View(dd)
dd$`Variable Names`[c(70:75)] <- paste0('Strategy_', seq(1,6))
length(76:93)
dd$`Variable Names`[c(76:93)] <- paste0('Real_World_', seq(1,18))
length(76:84)
dd$`Variable Names`[c(76:84)] <- paste0('Investment_', seq(1,9))
dd$`Variable Names`[c(85:93)] <- paste0('Fraud_', seq(1,9))
View(dd)
dd$`Variable Names`[c(94:117)] <- paste0('AVI_', seq(1,24))
dd$`Variable Names`[c(94:117)] <- paste0('AVI_', seq(1,24))
dd$`Variable Names`[c(118:132)] <- paste0('Numberacy_', seq(1,14))
dd$`Variable Names`[c(133:142)] <- paste0('Graph_Lit_', seq(1,10))
dd$`Variable Names`[143] <- 'DOB'
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
# add id column
dt$ID <- c(0,0,seq(1,209,1))
# clean
dt <- dt[-c(1:2)]
dt <- dt[c(ncol(dt),1:(ncol(dt)-1))]
# create data dictionary
dd <- t(dt[1,])
dd <- cbind(rownames(dd), data.frame(dd, row.names = NULL))
colnames(dd) <- c('Variable', 'Question')
# finish cleaning
dt <- dt[-c(1:2),]
dt$Age <- as.integer(as.character(dt$Age))
dt$Age <- dt$Age + 19
View(dt)
grep('SC0', colnames(dt))
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
# add id column
dt$ID <- c(0,0,seq(1,209,1))
# clean
dt <- dt[-c(1:2, 144:ncol(dt))]
View(dt)
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
View(dt)
View(dt)c(1:2, 144:ncol(dt)-1)
c(1:2, 144:ncol(dt)-1)
c(1:2, 144:(ncol(dt)-1))
# clean
dt <- dt[-c(1:2, 144:(ncol(dt)-1))]
View(dt)
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
View(dt)
# add id column
dt$ID <- c(0,0,seq(1,209,1))
# clean
dt <- dt[-c(1:2, 144:(ncol(dt)-1))]
View(dt)
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
View(dt)
grep('Q245.1', colnames(dt))
# load data
dt <- read.csv(here('data', 'boundskew1raw.csv'))
# add id column
dt$ID <- c(0,0,seq(1,209,1))
# clean
dt <- dt[-c(1:2, 145:(ncol(dt)-1))]
dt <- dt[c(ncol(dt),1:(ncol(dt)-1))]
View(dt)
# create data dictionary
dd <- t(dt[1,])
dd <- cbind(rownames(dd), data.frame(dd, row.names = NULL))
colnames(dd) <- c('Variable', 'Question')
# finish cleaning
dt <- dt[-c(1:2),]
dt$Age <- as.integer(as.character(dt$Age))
dt$Age <- dt$Age + 19
write.csv(dd, here("data", "bound_skew1_data_dictionary.csv"), row.names = FALSE)
write.csv(dt, here("data", "bound_skew1_data.csv"), row.names = FALSE)
View(dd)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
# add measurement units
dd$`Measurement Units` <- sapply(dt, class)
View(dd)
# Create and populate allowed_values in data dictionary
dd[,'Allowed Values'] <- NA
View(dt)
dd$`Measurement Units`[143] <- 'mm/dd/yyyy'
View(dd)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
rm(a, b, g, x, y, z)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
View(dt)
dd$`Allowed Values`[1] <- '1-209'
View(dd)
range(dt$Age)
View(dd)
dd$`Allowed Values`[3] <- "1 = Male, 2 = Female"
View(dd)
dd$`Allowed Values`[4] <- "1 = Middle School, 2 = High School Diploma, 3 = Some College,
4 = Bachelor's Degree, 5 = Master's Degree, 6 = Doctoral Degree"
# Create and populate description of variable
dd[,'Description of Variable'] <- NA
View(dd)
dd$`Description of Variable`[3] <- "1 = Male, 2 = Female"
dd$`Description of Variable`[4] <- "1 = Middle School, 2 = High School Diploma, 3 = Some College,
4 = Bachelor's Degree, 5 = Master's Degree, 6 = Doctoral Degree"
dd$`Description of Variable`[5] <-"1 = White/Caucasian, 2 = Black/African American, 3 = Asian, 4 = Hispanic/Latino,
5 = American Indian/Alaska Native, 6 = Pacific Islander, 7 = Multiracial, 8 = Other"
range(dt$Health)
range(dt$Income)
View(dd)
dd$`Allowed Values`[8:69] <- '1 or 2'
View(dd)
head(dt$Q241)
range(dt$Q241)
dd$`Description of Variable`[6] <- <- '1 = less than $10,000, 2 = $10,000-$19,999,
3 = $20,000-$29,999, 4 = $30,000-$39,999, 5 = $40,000-$49,999, 6 = $50,000-$59,999, 7 = $60,000-$69,999,
8 = $70,000-$79,999, 9 = $80,000-$89,999, 10 = $90,000-$99,999, 11 = $100,000-$109,999, 12 = $110,000-$119,999,
13 = $120,000-$129,999, 14 = $130,000-$139,999, 15 = $140,000-$149,999, 16 = $150,000 or more'
dd$`Description of Variable`[6] <- '1 = less than $10,000, 2 = $10,000-$19,999,
3 = $20,000-$29,999, 4 = $30,000-$39,999, 5 = $40,000-$49,999, 6 = $50,000-$59,999, 7 = $60,000-$69,999,
8 = $70,000-$79,999, 9 = $80,000-$89,999, 10 = $90,000-$99,999, 11 = $100,000-$109,999, 12 = $110,000-$119,999,
13 = $120,000-$129,999, 14 = $130,000-$139,999, 15 = $140,000-$149,999, 16 = $150,000 or more'
dd$`Description of Variable`[7] <- " 1 = Not healthy at all, 5 = Very healthy"
View(dd)
dd$`Description of Variable`[8:69] <- "1 = certain, 2 = gamble"
dd$`Description of Variable`[70:75] <- '1 = Strongly Disagree, 2 = Somewhat Disagree, 3 =
Neutral, 4 = Somewhat Agree, 5 = Strongly Agree'
dd$`Description of Variable`[76] <- '1 = Yes, 2 = No'
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
View(dd)
# Clean skew data
# 5.14.20 KLS
# load required packages
library(here)
# load source functions
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# add and populate variable names column
dd[,'Variable Names'] <- NA
dd$`Variable Names`[1:9] <- c(as.character(dd$Variable[1:7]), 'Practice 1', 'Practice 2')
gambles <- list(a = (10:19), b = (22:31), c = (34:43), d = (46:55), e = (58:67))
for (g in 1:length(gambles)){
print(g)
b <- rep(NA, length(gambles[g][[1]]))
for (x in 1:length(gambles[g][[1]])){
print(x)
y <- gambles[g][[1]][x]
z <- as.character(dd$Variable[y])
a <- strsplit(z, '_')
b[x] <- paste0(sub('X', '', a[[1]][1]), '_EV_', a[[1]][2], '_', a[[1]][3], '_Gamble')
}
dd$`Variable Names`[gambles[g][[1]]] <- b
}
rm(a, b, g, x, y, z, gambles)
dd$`Variable Names`[c(20:21, 32:33, 44:45, 56:57, 68:69)] <- paste0('Catch_', seq(1,10))
dd$`Variable Names`[c(70:75)] <- paste0('Strategy_', seq(1,6))
dd$`Variable Names`[c(76:84)] <- paste0('Investment_', seq(1,9))
dd$`Variable Names`[c(85:93)] <- paste0('Fraud_', seq(1,9))
dd$`Variable Names`[c(94:117)] <- paste0('AVI_', seq(1,24))
dd$`Variable Names`[c(118:132)] <- paste0('Numberacy_', seq(1,14))
dd$`Variable Names`[c(133:142)] <- paste0('Graph_Lit_', seq(1,10))
dd$`Variable Names`[143] <- 'DOB'
# add measurement units
dd$`Measurement Units` <- sapply(dt, class)
dd$`Measurement Units`[143] <- 'mm/dd/yyyy'
# Create and populate allowed_values in data dictionary
dd[,'Allowed Values'] <- NA
View(dd)
# Create and populate allowed_values in data dictionary
dd[,'Allowed Values'] <- NA
dd$`Allowed Values`[1] <- '1-209'
View(dd)
dd$`Allowed Values`[2] <- '22-85'
dd$`Allowed Values`[c(3, 8:69, 76)] <- '1-2'
dd$`Allowed Values`[c(4, 83)] <- '1-6'
dd$`Allowed Values`[5] <- '1-8'
dd$`Allowed Values`[6] <- '1-16'
dd$`Allowed Values`[c(7,70:75, 79:80)] <- '1-5'
dd$`Allowed Values`[77] <- 'Positive integers'
dd$`Allowed Values`[78] <- 'Monetary amount'
dd$`Allowed Values`[c(79,81)] <- 'Text'
View(dd)
View(dd)
dd$`Allowed Values`[c(81)] <- 'Text'
dd$`Allowed Values`[85] <- '1-7'
dd$`Allowed Values`[c(7,70:75, 79:80)] <- '1-5'
dd$`Allowed Values`[77] <- 'Positive integers'
dd$`Allowed Values`[78] <- 'Monetary amount'
dd$`Allowed Values`[c(81)] <- 'Text'
dd$`Allowed Values`[85] <- '1-7'
dd$`Allowed Values`[85:87] <- '1-7'
dd$`Description of Variable`[90] <- '1 = Mail, 2 = Phone call, 3 = Email, 4 = Website, 5 = Seminar,
6 = Other, 7 = Not applicable'
dd$`Description of Variable`[90] <- '1 = Mail, 2 = Phone call, 3 = Email, 4 = Website, 5 = Seminar,
6 = Other, 7 = Not applicable'
dd$`Description of Variable`[92] <- '1 = Stranger, 2 = Co-worker, 3 = Friend, 4 = Family member, 5 = Other, 6 = Not applicable'
View(dt)
range(dt$Q211)
range(dt$Q213)
range(dt$Q221)
levels(dt$Q221)
levels(dt$Q225_1)
levels(dt$Q225_2)
head(dt$Q227)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
View(dd)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
View(dd)
# Reorder columns
dd <- dd[c(1,3,4,5,2,6)]
View(dd)
View(dd)
# add measurement units
dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)]<- as.character(dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)])
# add measurement units
dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)]<- sapply(dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)], as.character)
dd[c(77,78, 81, 84, 91, 93, 123:128, 130:131)]
View(dt)
# add measurement units
dt[c(77,78, 81, 84, 91, 93, 123:128, 130:131)] <- sapply(dt[c(77,78, 81, 84, 91, 93, 123:128, 130:131)], as.character)
View(dt)
dd$`Measurement Units` <- sapply(dt, class)
dd$`Measurement Units`[143] <- 'mm/dd/yyyy'
View(dd)
source('~/github/boundSkew1/12_complete_data_dictionary.R', echo=TRUE)
View(dd)
dd$`Description of Variable` <- sapply(dd$`Description of Variable`, as.character)
View(dd)
dd$`Description of Variable`[is.na(dd$`Description of Variable`)] <- ''
View(dd)
write.csv(dd, here("data", "bound_skew1_data_dictionary.csv"), row.names = FALSE)
