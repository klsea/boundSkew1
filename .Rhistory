d2 <- d1[complete.cases(d1),]
d3 <- d2[order(d2$ResponseId, d2$deg_skew),]
d4 <- d3[c(1:3,5:8,4)]
# score skew data
# 6.10.19 KLS
# load required packages
library(here)
library(ggplot2)
# load source functiozns
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(9,12),20:79)
d1 <- clean_skew(d0)
# load required packages
library(here)
library(ggplot2)
# load source functiozns
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(9,12),20:79)
d1 <- clean_skew(d0)
View(d1)
# recode response to acceptance
d4$accept <- d4$response - 1
# recode response to acceptance
d1$accept <- d1$response - 1
View(d1)
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude)
# age effects on acceptance rates
ggplot(d1, aes(Age, accept, colour = deg_skew, fill = deg_skew)) + geom_smooth(method=lm) +
theme(legend.position = 'top') + facet_grid(magnitude ~ valence)
# create summary - main effect of degree of skewness
d2 <- summarySE(data=d1, measurevar = 'accept', groupvars='deg_skew')
View(d2)
ggplot(d2, aes(deg_skew, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'none')
# create summary - add interaction with valence of gamble
d3 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence','deg_skew'))
ggplot(d3, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - add interaction with magnitude of gamble
d4 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('magnitude','deg_skew'))
ggplot(d4, aes(magnitude, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - 3 way interaction
d5 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence', 'magnitude', 'deg_skew'))
ggplot(d5, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top') + facet_wrap(~ magnitude)
# load required packages
library(here)
library(ggplot2)
# load source functiozns
source(here('scr', 'isolate_skew.R'))
here()
# load source functiozns
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(9,12),20:79)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude)
# age effects on acceptance rates
ggplot(d1, aes(Age, accept, colour = deg_skew, fill = deg_skew)) + geom_smooth(method=lm) +
theme(legend.position = 'top') + facet_grid(magnitude ~ valence)
# create summary - main effect of degree of skewness
d2 <- summarySE(data=d1, measurevar = 'accept', groupvars='deg_skew')
ggplot(d2, aes(deg_skew, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'none')
# create summary - add interaction with valence of gamble
d3 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence','deg_skew'))
ggplot(d3, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - add interaction with magnitude of gamble
d4 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('magnitude','deg_skew'))
ggplot(d4, aes(magnitude, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - 3 way interaction
d5 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence', 'magnitude', 'deg_skew'))
ggplot(d5, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top') + facet_wrap(~ magnitude)
# load required packages
library(here)
# load data
dt <- read.csv('~/Dropbox (MCAB Lab)/MCAB/data/skew2/data/skew_full_raw.csv')
dt <- dt[-c(10:17)]
dd <- t(dt[1,])
dt <- dt[-c(1:2),]
dt$Age <- as.integer(as.character(dt$Age))
dt$Age <- dt$Age + 19
write.csv(dd, here("data", "bound_skew1_data_dictionary.csv"), row.names = FALSE)
write.csv(dt, here("data", "bound_skew1_data.csv"), row.names = FALSE)
View(dd)
# load required packages
library(here)
# load source functiozns
source(here('scr', 'isolate_skew.R'))
View(isolate_skew)
source(here('scr', 'clean_skew.R'))
View(isolate_skew)
View(clean_skew)
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# load data
dt <- read.csv('~/Dropbox (MCAB Lab)/MCAB/data/skew2/data/skew_full_raw.csv')
dt <- dt[-c(10:17)]
View(dt)
dd <- t(dt[1,])
View(dd)
dt <- dt[-c(1:2),]
View(dt)
dt$Age <- as.integer(as.character(dt$Age))
dt$Age <- dt$Age + 19
# load required packages
library(here)
# load source functions
source(here('scr', 'isolate_skew.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
source('~/R_Projects/boundSkew1/00_load_data.R', echo=TRUE)
View(dd)
grep('ACTUALLY feel', colnames(dt))
View(dd)
View(dt)
grep('ACTUALLY feel', rownames(dd))
grep('ACTUALL', dd$1)
grep('ACTUALL', dd[,1])
grep('ACTUALLY', dd[,1])
dt[,grep('ACTUALLY', dd[,1])]
head(dt[,grep('ACTUALLY', dd[,1])])
dd[104,]
isolate_measure <- function(data, term, datadict) {
# input: data = data table
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
data[,grep(term, datadict[,1])]
}
isolate_measure(dt, "ACTUALLY", dd)
head(isolate_measure(dt, "ACTUALLY", dd))
avi <- isolate_measure(dt, "ACTUALLY", dd)
View(avi)
View(dd)
data = dt
term = "ACTUALLY"
datadict = dd
# input: data = data table
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
data[,grep(term, datadict[,1])]
grep(term, datadict[,1])
dd[grep(term, datadict[,1])]
d0 <- dd[grep(term, datadict[,1])]
d1 <- d0[1:6]
d1
gsub('Listed below are a number of words that describe feelings. Some of the feelings are very similar to\neach other, whereas others are very different from each other. Read each word and then select how\noften YOU ACTUALLY HAVE that feeling over the course of a typical week:\nOver the course of a typical week, I ACTUALLY feel… - ', '', d1)
d1 <- gsub('Listed below are a number of words that describe feelings. Some of the feelings are very similar to\neach other, whereas others are very different from each other. Read each word and then select how\noften YOU ACTUALLY HAVE that feeling over the course of a typical week:\nOver the course of a typical week, I ACTUALLY feel… - ', '', d1)
d2 <- d0[7:24]
d2
d2 <- gsub("Over the course of a typical week, I ACTUALLY feel… - ")
d2 <- gsub("Over the course of a typical week, I ACTUALLY feel… - ", "", d2)
d2
d3 <- c(d1,d2)
colnames(data) <- d3
data
View(data)
# load required packages
library(here)
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
data <- dt
term <- 'ACTUALLY'
datadict <- dd
# load data
dt <- read.csv('~/Dropbox (MCAB Lab)/MCAB/data/skew2/data/skew_full_raw.csv')
dt <- dt[-c(10:17)]
dd <- t(dt[1,])
dt <- dt[-c(1:2),]
dt$Age <- as.integer(as.character(dt$Age))
dt$Age <- dt$Age + 19
datadict <- dd
d0 <- dd[grep(term, datadict[,1])]
d1 <- d0[1:6]
d1 <- gsub('Listed below are a number of words that describe feelings. Some of the feelings are very similar to\neach other, whereas others are very different from each other. Read each word and then select how\noften YOU ACTUALLY HAVE that feeling over the course of a typical week:\nOver the course of a typical week, I ACTUALLY feel… - ', '', d1)
d2 <- d0[7:24]
d2 <- gsub("Over the course of a typical week, I ACTUALLY feel… - ", "", d2)
d3 <- c(d1,d2)
colnames(data) <- d3
View(data)
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
isolate_measure <- function(data, term, datadict) {
# input: data = data table
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
data[,grep(term, datadict[,1])]
}
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
d0 <- dd[grep(term, datadict[,1])]
d1 <- d0[1:6]
d1 <- gsub('Listed below are a number of words that describe feelings. Some of the feelings are very similar to\neach other, whereas others are very different from each other. Read each word and then select how\noften YOU ACTUALLY HAVE that feeling over the course of a typical week:\nOver the course of a typical week, I ACTUALLY feel… - ', '', d1)
d2 <- d0[7:24]
d2 <- gsub("Over the course of a typical week, I ACTUALLY feel… - ", "", d2)
d3 <- c(d1,d2)
colnames(avi) <- d3
View(avi)
add_correct_avi_labels(avi, "ACTUALLY", dd)
add_correct_avi_labels <- function(avi, term, datadict) {
# input: avi
d0 <- dd[grep(term, datadict[,1])]
d1 <- d0[1:6]
d1 <- gsub('Listed below are a number of words that describe feelings. Some of the feelings are very similar to\neach other, whereas others are very different from each other. Read each word and then select how\noften YOU ACTUALLY HAVE that feeling over the course of a typical week:\nOver the course of a typical week, I ACTUALLY feel… - ', '', d1)
d2 <- d0[7:24]
d2 <- gsub("Over the course of a typical week, I ACTUALLY feel… - ", "", d2)
d3 <- c(d1,d2)
colnames(avi) <- d3
}
add_correct_avi_labels(avi, "ACTUALLY", dd)
add_correct_avi_labels <- function(avi, term, datadict) {
# input: avi
d0 <- dd[grep(term, datadict[,1])]
d1 <- d0[1:6]
d1 <- gsub('Listed below are a number of words that describe feelings. Some of the feelings are very similar to\neach other, whereas others are very different from each other. Read each word and then select how\noften YOU ACTUALLY HAVE that feeling over the course of a typical week:\nOver the course of a typical week, I ACTUALLY feel… - ', '', d1)
d2 <- d0[7:24]
d2 <- gsub("Over the course of a typical week, I ACTUALLY feel… - ", "", d2)
d3 <- c(d1,d2)
colnames(avi) <- d3
}
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
avi
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
View(avi)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
View(dd)
# load required packages
library(here)
# load data
dt <- read.csv('~/Dropbox (MCAB Lab)/MCAB/data/skew2/data/skew_full_raw.csv')
dt <- dt[-c(10:17)]
dd <- t(dt[1,])
dt <- dt[-c(1:2),]
dt$Age <- as.integer(as.character(dt$Age))
dt$Age <- dt$Age + 19
write.csv(dd, here("data", "bound_skew1_data_dictionary.csv"), row.names = FALSE)
write.csv(dt, here("data", "bound_skew1_data.csv"))
# load required packages
library(here)
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
View(dd)
# load data
dt <- read.csv('~/Dropbox (MCAB Lab)/MCAB/data/skew2/data/skew_full_raw.csv')
dt <- dt[-c(10:17)]
dd <- t(dt[1,])
View(dd)
write.csv(dd, here("data", "bound_skew1_data_dictionary.csv"))
write.csv(dt, here("data", "bound_skew1_data.csv"), row.names = FALSE)
# load required packages
library(here)
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
View(dt)
data
data
data
# load required packages
library(here)
# load data
dt <- read.csv('~/Dropbox (MCAB Lab)/MCAB/data/skew2/data/skew_full_raw.csv')
dt <- dt[-c(10:17)]
dd <- t(dt[1,])
dt <- dt[-c(1:2),]
dt$Age <- as.integer(as.character(dt$Age))
dt$Age <- dt$Age + 19
View(dt)
View(dd)
write.csv(dd, here("data", "bound_skew1_data_dictionary.csv"))
write.csv(dt, here("data", "bound_skew1_data.csv"), row.names = FALSE)
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
View(dt)
View(dd)
View(dd)
source('~/.active-rstudio-document', echo=TRUE)
# load required packages
library(here)
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
source('~/.active-rstudio-document', echo=TRUE)
View(avi)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
avi <- avi
term <- "ACTUALLY"
datadict <- dd
# input: avi
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
d0 <- dd[grep(term, datadict[,2])]
View(datadict)
datadict[,2]
head(datadict[,2])
grep(term, datadict[,2])
# input: avi
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
d0 <- datadict[grep(term, datadict[,2])]
# input: avi
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
d0 <- datadict[grep(term, datadict[,2]),]
View(d0)
View(datadict)
# input: avi
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
d0 <- datadict[grep(term, datadict[,2]),2]
d0
# input: avi
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
d0 <- as.character(datadict[grep(term, datadict[,2]),2])
d1 <- d0[1:6]
d1 <- gsub('Listed below are a number of words that describe feelings. Some of the feelings are very similar to\neach other, whereas others are very different from each other. Read each word and then select how\noften YOU ACTUALLY HAVE that feeling over the course of a typical week:\nOver the course of a typical week, I ACTUALLY feel… - ', '', d1)
d2 <- d0[7:24]
d2 <- gsub("Over the course of a typical week, I ACTUALLY feel… - ", "", d2)
d3 <- c(d1,d2)
colnames(avi) <- d3
return(avi)
# load required packages
library(here)
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
View(avi)
View(avi)
View(dt)
# input: data = data table
# term = character
# datadict = data dictionary with only 2 columns *UPDATE WHEN DATA DICT IS UPDATED
data[,c(9,grep(term, datadict[,2]))]
# load source functions
source(here("scr", "isolate_measure.R"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
View(avi)
# load required packages
library(here)
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
View(avi)
View(avi)
hap <- c('Enthusiastic', 'Excited', 'Strong')
hap <- avi$Enthusiastic + avi$Excited + avi$Strong
avi$hap <- avi$Enthusiastic + avi$Excited + avi$Strong
View(avi)
avi$hap <- (avi$Enthusiastic + avi$Excited + avi$Strong) / 3
avi$pos <- (avi$Happy + avi$Satisfied + avi$Content) / 3
View(avi)
View(avi)
avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful) / 3
avi$la <- (avi$Quiet+ avi$Passive + avi$Still) / 3
avilan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
avi$han <- (avi$Fearful + avi$Hostile + avi$Nervous) /3
avi$hap <- (avi$Enthusiastic + avi$Excited + avi$Strong) / 3
avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful) / 3
avi$la <- (avi$Quiet + avi$Passive + avi$Still) / 3
#avi$pos <- (avi$Euphoric + avi$Elated + avi$Rested ) /3 # We don't think this is correct
avilan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
avi$han <- (avi$Fearful + avi$Hostile + avi$Nervous) /3
avi$ha <- (avi$Aroused + avi$Surprised + avi$Astonished) / 3
View(avi)
View(avi)
#avi$pos <- (avi$Euphoric + avi$Elated + avi$Rested ) /3 # We don't think this is correct
avilan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
View(avi)
#avi$pos <- (avi$Euphoric + avi$Elated + avi$Rested ) /3 # We don't think this is correct
avi$lan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
score_avi <- function(avi) {
avi$hap <- (avi$Enthusiastic + avi$Excited + avi$Strong) / 3
avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful) / 3
avi$la <- (avi$Quiet + avi$Passive + avi$Still) / 3
#avi$pos <- (avi$Euphoric + avi$Elated + avi$Rested ) /3 # We don't think this is correct
avi$lan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
avi$han <- (avi$Fearful + avi$Hostile + avi$Nervous) /3
avi$ha <- (avi$Aroused + avi$Surprised + avi$Astonished) / 3
#avi$neg <- (avi$Lonely + avi$Inactive + avi$Idle ) /3 # We don't think this is correct
return(avi[,26:31])
}
# load required packages
library(here)
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
avi <- score_avi(avi)
View(avi)
score_avi <- function(avi) {
avi$hap <- (avi$Enthusiastic + avi$Excited + avi$Strong) / 3
avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful) / 3
avi$la <- (avi$Quiet + avi$Passive + avi$Still) / 3
#avi$pos <- (avi$Euphoric + avi$Elated + avi$Rested ) /3 # We don't think this is correct
avi$lan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
avi$han <- (avi$Fearful + avi$Hostile + avi$Nervous) /3
avi$ha <- (avi$Aroused + avi$Surprised + avi$Astonished) / 3
#avi$neg <- (avi$Lonely + avi$Inactive + avi$Idle ) /3 # We don't think this is correct
return(avi)
#return(avi[,26:31])
}
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
avi <- score_avi(avi)
View(avi)
head(avi[,26:31])
# load required packages
library(here)
# load source functions
source(here("scr", "isolate_measure.R"))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
dd <- read.csv(here("data", "bound_skew1_data_dictionary.csv"))
# AVI
avi <- isolate_measure(dt, "ACTUALLY", dd)
avi <- add_correct_avi_labels(avi, "ACTUALLY", dd)
avi <- score_avi(avi)
View(avi)
score_avi <- function(avi) {
avi$hap <- (avi$Enthusiastic + avi$Excited + avi$Strong) / 3
avi$lap <- (avi$Calm + avi$Relaxed + avi$Peaceful) / 3
avi$la <- (avi$Quiet + avi$Passive + avi$Still) / 3
#avi$pos <- (avi$Euphoric + avi$Elated + avi$Rested ) /3 # We don't think this is correct
avi$lan <- (avi$Dull + avi$Sleepy + avi$Sluggish) / 3
avi$han <- (avi$Fearful + avi$Hostile + avi$Nervous) /3
avi$ha <- (avi$Aroused + avi$Surprised + avi$Astonished) / 3
#avi$neg <- (avi$Lonely + avi$Inactive + avi$Idle ) /3 # We don't think this is correct
return(avi[,c(1,26:31)])
}
source('~/R_Projects/boundSkew1/scr/04_score_questionnaires.R', echo=TRUE)
View(avi)
