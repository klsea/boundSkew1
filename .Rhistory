library(dplyr)
# load source functions
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# Age
age <- c(mean(dt$Age),sd(dt$Age),range(dt$Age))
write.csv(age, here('output', 'age.csv'), row.names = FALSE)
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# Age
demo <- c(nrow(dt), mean(dt$Age),sd(dt$Age),range(dt$Age))
write.csv(demo, here('output', 'demo.csv'), row.names = FALSE)
quired packages
library(here)
library(dplyr)
# load source functions
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# Age
demo <- c(nrow(dt), mean(dt$Age),sd(dt$Age),range(dt$Age))
write.csv(demo, here('output', 'demo.csv'), row.names = FALSE)
hist(dt$Age)
# Age
demo <- c(as.english(nrow(dt)), mean(dt$Age),sd(dt$Age),range(dt$Age))
write.csv(demo, here('output', 'demo.csv'), row.names = FALSE)
# demographics
# 10.17.19 KLS
# load required packages
library(here)
library(dplyr)
library(english)
# load source functions
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# Age
demo <- c(as.english(nrow(dt)), mean(dt$Age),sd(dt$Age),range(dt$Age))
write.csv(demo, here('output', 'demo.csv'), row.names = FALSE)
demo
# Age
demo <- c(as.english(nrow(dt)), mean(dt$Age),sd(dt$Age),range(dt$Age))
library(english)
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
# model 1 - only degree of skew
m1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
# run models on skew data
# 7.15.19 KLS updated 10.17.19
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
# model 1 - only degree of skew
m1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
# boundary fit - remove age from random effects
m1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1.1, correlation = FALSE)
# model 2 - add valence
m2 <- glmer(accept ~ deg_skew + valence + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m2, correlation = FALSE)
# compare model 1 and model 2
anova(m1,m2)
# model 3 -  magnitude instead of valence
m3 <- glmer(accept ~ deg_skew  + magnitude + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m3, correlation = FALSE)
# compare model 2 to model 4
anova(m1,m4)
# compare model 2 to model 4
anova(m1,m3)
summary(m4, correlation = FALSE)
# compare model 4.1 to model 4
anova(m3, m4)
# model 4 - interaction between mag and val
m4 <- glmer(accept ~ deg_skew + magval + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m4, correlation = FALSE)
# compare model 4.1 to model 4
anova(m3, m4)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
# boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
# model 1 - add valence
m1 <- glmer(accept ~ deg_skew + valence + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
# compare model 1 and model 2
anova(b1.1,m1)
# model 2 -  magnitude instead of valence
m2 <- glmer(accept ~ deg_skew  + magnitude + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m2, correlation = FALSE)
# compare model 2 to model 4
anova(b1.1,m2)
# model 3 - interaction between mag and val
m3 <- glmer(accept ~ deg_skew + magval + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m3, correlation = FALSE)
# compare model 3 to baseline
anova(b1.1, m4)
# model 5 - add Age
m5 <- glmer(accept ~ deg_skew + magval + Age + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m5, correlation = FALSE)
# model 5 - add Age
m5 <- glmer(accept ~ deg_skew + magval + Age + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m5, correlation = FALSE)
# compare model 5 to model 4
anova(m4,m5)
# run models on skew data
# 7.15.19 KLS updated 10.17.19
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
# boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
save(b1.1, here('output', 'baseline.RDS')
)
save(b1.1, here('output', 'baseline.RDS'))
# load required packages
library(here)
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
# boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
save(b1.1, here('output', 'baseline.RDS'))
saveRDS(b1.1, here('output', 'baseline.RDS'))
# run models on skew data
# 7.15.19 KLS updated 10.17.19
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# set hard-coded variables
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
# boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
saveRDS(b1.1, here('output', 'baseline.RDS'))
# model 1 - add valence
m1 <- glmer(accept ~ deg_skew + valence + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
saveRDS(m1, here('output', 'm1.RDS'))
# compare model 1 and model 2
b.m1 <-anova(b1.1,m1)
saveRDS(b.m1, here('output', 'b-m1compare.RDS'))
# read in model fits
b <- readRDS(here('output', 'baseline.RDS'))
b
summary(b)
b$coefficients
b$Coefficients
b[10]
b
summary(b)
summary(b)$Coefficients
summary(b)$coefficients
m1 <- readRDS(here('output', 'm1.RDS'))
summary(m1)$coefficients
tab_model(b,m1)
library(sjplot)
install.packages(sjplot)
install.packages(sjPlot)
install.packages('sjPlot')
# load required packages
library(here)
library(sjPlot)
# read in model fits
b <- readRDS(here('output', 'baseline.RDS'))
summary(b)$coefficients
m1 <- readRDS(here('output', 'm1.RDS'))
summary(m1)$coefficients
tab_model(b,m1)
tab_model(b,m1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/github/boundSkew1/03_model_skew.R', echo=TRUE)
# load required packages
library(here)
library(lme4)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# reorder valence factor
d1$valence <- factor(d1$valence, levels = c('neutral', 'gain', 'loss'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude, levels = c('0', '0.5', '5'))
# scale and center age
d1$Age <- scale(d1$Age)
# make interaction term
d1$magval <- interaction(d1$valence, d1$magnitude)
# baseline - only degree of skew
b1 <- glmer(accept ~ deg_skew + (1 + Age | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1, correlation = FALSE)
# boundary fit - remove age from random effects
b1.1 <- glmer(accept ~ deg_skew + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(b1.1, correlation = FALSE)
saveRDS(b1.1, here('output', 'baseline.RDS'))
# model 1 - add valence
m1 <- glmer(accept ~ deg_skew + valence + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m1, correlation = FALSE)
saveRDS(m1, here('output', 'm1.RDS'))
# compare model 1 and model 2
b.m1 <-anova(b1.1,m1)
# model 2 -  magnitude instead of valence
m2 <- glmer(accept ~ deg_skew  + magnitude + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m2, correlation = FALSE)
saveRDS(m2, here('output', 'm2.RDS'))
# compare model 2 to baseline
anova(b1.1,m2)
# model 3 - interaction between mag and val
m3 <- glmer(accept ~ deg_skew + magval + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m3, correlation = FALSE)
saveRDS(m3, here('output', 'm3.RDS'))
# compare model 3 to baseline
anova(b1.1, m4)
# model 4 - add Age
m4 <- glmer(accept ~ deg_skew + magval + Age + (1 | ID), data = d1, family = binomial(link = logit), nAGQ = 1,
control=glmerControl(optimizer='bobyqa'))
summary(m4, correlation = FALSE)
saveRDS(m4, here('output', 'm4.RDS'))
# compare model 5 to model 4
anova(m4,m5)
# compare model 5 to model 4
anova(m3,m4)
# load required packages
library(here)
library(sjPlot)
# read in model fits
b <- readRDS(here('output', 'baseline.RDS'))
m1 <- readRDS(here('output', 'm1.RDS'))
m2 <- readRDS(here('output', 'm2.RDS'))
m3 <- readRDS(here('output', 'm3.RDS'))
m4 <- readRDS(here('output', 'm4.RDS'))
tab_model(b,m1,m2,m3,m4)
# load required packages
library(here)
library(sjPlot)
# read in model fits
b <- readRDS(here('output', 'baseline.RDS'))
m1 <- readRDS(here('output', 'm1.RDS'))
m2 <- readRDS(here('output', 'm2.RDS'))
m3 <- readRDS(here('output', 'm3.RDS'))
m4 <- readRDS(here('output', 'm4.RDS'))
tab_model(b,m1,m2,m3,m4)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude)
# age effects on acceptance rates
ggplot(d1, aes(Age, accept, colour = deg_skew, fill = deg_skew)) + geom_smooth(method=lm) +
theme(legend.position = 'top') + facet_grid(magnitude ~ valence)
# create summary - main effect of degree of skewness
d2 <- summarySE(data=d1, measurevar = 'accept', groupvars='deg_skew')
ggplot(d2, aes(deg_skew, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'none')
saveRDS(deg_skew_plot, here('output', 'deg_skew_plot.RDS'))
ggsave('deg_skew_plot.pdf', plot = last_plot(), device="pdf", path=here("output", "deg_skew_plot.pdf"))
ggsave( plot = last_plot(), device="pdf", path=here("output", "deg_skew_plot.pdf"))
ggsave(deg_skew_plot, plot = last_plot(), device="pdf", path=here("output", "deg_skew_plot.pdf"))
ggsave("deg_skew_plot.pdf", plot = last_plot(), device="pdf", path=here("output", "deg_skew_plot.pdf"))
# load required packages
library(here)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude)
# age effects on acceptance rates
ggplot(d1, aes(Age, accept, colour = deg_skew, fill = deg_skew)) + geom_smooth(method=lm) +
theme(legend.position = 'top') + facet_grid(magnitude ~ valence)
# create summary - main effect of degree of skewness
d2 <- summarySE(data=d1, measurevar = 'accept', groupvars='deg_skew')
ggplot(d2, aes(deg_skew, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'none')
ggsave("deg_skew_plot.pdf", plot = last_plot(), device="pdf", path=here("output", "deg_skew_plot.pdf"))
ggsave("deg_skew_plot.pdf", plot = last_plot(), device="pdf", path=here("output"))
ggsave("deg_skew_plot.pdf", plot = last_plot(), device="pdf")
ggsave("deg_skew_plot.pdf", plot = last_plot(), device="pdf", path="output/")
source('~/github/boundSkew1/scr/create_regression_table.R', echo=TRUE)
View(t2)
t2
# load required packages
library(here)
# load required packages
library(here)
library(ggplot2)
# load source functions
source(here('scr', 'isolate_skew.R'))
source(here('scr', 'clean_skew.R'))
source(here('scr', 'SummarySE.R'))
# load data
dt <- read.csv(here("data", "bound_skew1_data.csv"))
# separate skew
d0 <- isolate_skew(dt,c(1,2),10:69)
d1 <- clean_skew(d0)
# recode response to acceptance
d1$accept <- d1$response - 1
# reorder deg_skew factor
d1$deg_skew <- factor(d1$deg_skew, levels = c('Symmetric', 'Weak', 'Moderate', 'Strong'))
# make magnitude a factor
d1$magnitude <- factor(d1$magnitude)
# age effects on acceptance rates
ggplot(d1, aes(Age, accept, colour = deg_skew, fill = deg_skew)) + geom_smooth(method=lm) +
theme(legend.position = 'top') + facet_grid(magnitude ~ valence)
# create summary - main effect of degree of skewness
d2 <- summarySE(data=d1, measurevar = 'accept', groupvars='deg_skew')
# create summary - 3 way interaction
d5 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence', 'magnitude', 'deg_skew'))
ggplot(d5, aes(valence, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top') + facet_wrap(~ magnitude)
# create summary - add interaction with magnitude of gamble
d4 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('magnitude','deg_skew'))
ggplot(d4, aes(magnitude, accept, fill = deg_skew)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
# create summary - interaction between magnitude and valence (w/o skew)
d6 <- summarySE(data=d1, measurevar = 'accept', groupvars=c('valence', 'magnitude'))
ggplot(d6, aes(valence, accept)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top') + facet_wrap(~ magnitude)
ggplot(d6, aes(valence, accept, fill = valence)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top') + facet_wrap(~ magnitude)
ggplot(d6, aes(magnitude, accept, fill = valence)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top') + facet_wrap(~ magnitude)
ggplot(d6, aes(magnitude, accept, fill = valence)) + geom_bar(position=position_dodge(), stat='identity') +
geom_errorbar(aes(ymin=accept - se, ymax = accept + se), width = .2, position=position_dodge(.9)) +
theme(legend.position = 'top')
